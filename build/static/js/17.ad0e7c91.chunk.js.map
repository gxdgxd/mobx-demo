{"version":3,"sources":["container/TagManager/SingleTag.js","container/TestCaseManager/ExeCaseDrawer.js","container/TestCaseManager/Insert/index.js"],"names":["SingleTag","inject","observer","props","handleClose","removedTag","tags","filter","tag","id","console","log","setState","showInput","inputVisible","input","focus","handleInputChange","e","inputValue","target","value","handleInputConfirm","a","state","indexOf","TagManagerStore","postInsertTag","result","data","getTags","saveInputRef","this","map","index","isLongTag","length","tagElem","key","closable","onClose","slice","title","ref","type","size","style","width","onChange","onBlur","onPressEnter","onClick","background","borderStyle","Component","TextArea","ExeCaseDrawer","TestCaseManagerStore","hideCaseDrawer","visible","copy","message","success","exeDetailData","drawerVisible","caseData","toJS","caseExeRecords","statusStr","status","color","resultStatus","succeed","testCase","placement","gutter","span","name","operatorName","env","exeTimeStr","testApi","backgroundColor","border","src","eval","sampleResult","enableClipboard","handleCopy","rows","param","contextParamScript","create","config","top","FormItem","Item","Option","InsertIndex","getCaseTags","insertCaseTags","insert","preventDefault","form","validateFieldsAndScroll","err","values","ApiManagerStore","detailData","compressParams","jsonFormat","timerExe","timerDate","setInterval","tick","ExeRecordStore","getDetailData","handleClearTimeout","testCaseExe","caseId","getUrlParam","window","location","search","warn","params","GlobalManagerStore","varValue","exeCase","code","showCaseDrawer","isCompressDisplay","isJsonFormatDisplay","dubboGroup","leg","setBreadcrumb","getApiDetailData","getVarDetail","n","changeDetailData","v","toString","clearInterval","getFieldDecorator","insertButtonStatus","updateButtonStatus","caseDetailData","caseTags","mockJson","paramScript","JSON","parse","className","layout","onSubmit","formItemLayout","label","appName","moduleName","initialValue","apiClassName","rules","required","disabled","apiMethodName","pllaceholder","inputChange","bind","priority","optionChange","desc","float","argsJsonFormat","theme","resultJsonFormat","display","marginBottom","validScript","href","htmlType","open","placeholder","allowClear","changeInput"],"mappings":"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","file":"static/js/17.ad0e7c91.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Tag,Icon, Input,Tooltip } from 'antd';\n\n@inject('TagManagerStore')\n@observer\nclass SingleTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags:[],\n            inputVisible: false,\n            inputValue: '',\n        }\n    }\n\n    handleClose = removedTag => {\n        debugger\n        const tags = this.props.tags.filter(tag => tag.id !== removedTag);\n        console.log(tags);\n        this.setState({ tags });\n    };\n\n    showInput = () => {\n        this.setState({ inputVisible: true }, () => this.input.focus());\n    };\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.target.value });\n    };\n\n    handleInputConfirm = async () => {\n        const { inputValue } = this.state;\n        let { tags } = this.state\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue];\n        }\n        const result = await this.props.TagManagerStore.postInsertTag(tags[0])\n        let tag = {'id':result.data,'value':tags[0]}\n        this.props.getTags(tag)\n        this.setState({\n            inputVisible: false,\n            inputValue: '',\n        });\n    };\n\n    saveInputRef = input => (this.input = input);\n\n    render(){\n        const { inputVisible, inputValue} = this.state;\n        return(\n            <div>\n                {this.props.tags.map((tag, index) => {\n                    const isLongTag = tag.length > 20;\n                    const tagElem = (\n                        <Tag key={tag.id} closable onClose={() => this.handleClose(tag.id)}>\n                            {isLongTag ? `${tag.value.slice(0, 20)}...` : tag.value}\n                        </Tag>\n                    );\n                    return isLongTag ? (\n                        <Tooltip title={tag.value} key={tag.id}>\n                            {tagElem}\n                        </Tooltip>\n                    ) : (\n                        tagElem\n                    );\n                })}\n                {inputVisible && (\n                    <Input\n                        ref={this.saveInputRef}\n                        type=\"text\"\n                        size=\"small\"\n                        style={{ width: 78 }}\n                        value={inputValue}\n                        onChange={this.handleInputChange}\n                        onBlur={this.handleInputConfirm}\n                        onPressEnter={this.handleInputConfirm}\n                    />\n                )}\n                {!inputVisible && (\n                    <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                        <Icon type=\"plus\" /> New Tag\n                    </Tag>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default SingleTag","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Row,Col,Form, Drawer, Tag ,Alert,Input} from 'antd';\nimport ReactJson from 'react-json-view'\nimport {toJS} from \"mobx/lib/mobx\";\nimport {message} from \"antd/lib/index\";\nconst { TextArea } = Input;\n\n@inject('TestCaseManagerStore')\n@observer\nclass ExeCaseDrawer extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            visible:false\n        }\n    }\n\n    onClose = () => {\n        this.props.TestCaseManagerStore.hideCaseDrawer()\n    };\n    handleCopy(copy){\n        message.success(\"复制成功\")\n    }\n    render(){\n        const {exeDetailData,drawerVisible} = this.props\n        let caseData = toJS(exeDetailData.caseExeRecords)\n        let statusStr = \"\"\n        if(exeDetailData.status == 0){\n            statusStr = <Tag color=\"#f50\">待执行</Tag>\n        }else if(exeDetailData.status == 1){\n            statusStr = <Tag color=\"#2db7f5\">执行中</Tag>\n        }else if(exeDetailData.status == 2){\n            statusStr = <Tag color=\"#87d068\">已完成</Tag>\n        }\n        let resultStatus = \"\"\n        if(typeof caseData != \"undefined\"){\n            if(caseData[0].succeed == true){\n                resultStatus = <Tag color=\"#87d068\">执行成功</Tag>\n            }else if(caseData[0].succeed == false){\n                resultStatus = <Tag color=\"#f50\">执行失败</Tag>\n            }\n        }\n\n        console.log(typeof caseData == 'undefined' ? \"\" : caseData[0].testCase)\n        const style = {\n            'marginBottom':'8px'\n        }\n        return (\n            <Drawer\n                title=\"执行结果\" width={720}\n                placement=\"right\"\n                onClose={this.onClose}\n                visible={drawerVisible}\n            >\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        {typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.name}\n                    </Col>\n                    <Col span={6}>\n                        任务状态：{statusStr}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        操作人：{exeDetailData.operatorName}\n                    </Col>\n                    <Col span={10}>\n                        执行环境：{exeDetailData.env}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        执行时间：{exeDetailData.exeTimeStr}\n                    </Col>\n                    <Col span={8}>\n                        执行结果：{resultStatus}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        接口名： {typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.testApi.name}\n                    </Col>\n                </Row>\n                <Alert message=\"校验结果\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <pre>\n                    {typeof caseData == 'undefined' ? \"\" : caseData[0].message == null ? \"暂无结果\":caseData[0].message}\n                </pre>\n                <Alert message=\"接口实际返回结果\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <ReactJson src={typeof caseData == 'undefined' ? \"\" : eval(\"(\"+caseData[0].sampleResult+\")\")} name={null}  enableClipboard={this.handleCopy} style={{border:'1px solid #ccc','height':'153px','marginBottom':'5px','maxHeight':'153px','overflow-y':'auto'  }}/>\n\n                <Alert message=\"请求入参\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <TextArea rows={5} style={{'width':'670px','marginBottom':'6px'}} value={typeof caseData == 'undefined' ? \"\" : caseData[0].param}/>\n                <Alert message=\"dubbo contextParams\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <TextArea rows={3} style={{'width':'670px','marginBottom':'6px'}} value={typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.contextParamScript}/>\n            </Drawer>\n        )\n    }\n}\n\nexport default Form.create()(ExeCaseDrawer)\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport ReactJson from 'react-json-view'\nimport { Tag, Button,Alert, Select, Row,Icon, Form, Input,Tooltip,message } from 'antd';\nimport {getUrlParam} from '../../../utils/common'\nimport ExeCaseDrawer from '../ExeCaseDrawer'\nimport SingleTag from \"../../TagManager/SingleTag\";\n\nmessage.config({\n    top: 200\n});\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\n@inject('TestCaseManagerStore','ApiManagerStore','ExeRecordStore','TagManagerStore','GlobalManagerStore')\n@observer\nclass InsertIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '用例管理'},\n            {name: '编辑用例'},\n        ]);\n        this.props.ApiManagerStore.getApiDetailData()\n        this.props.GlobalManagerStore.getVarDetail(\"default_env\");\n\n        if(getUrlParam('caseId',window.location.search) != \"\"){\n            this.props.TestCaseManagerStore.getDetailData()\n        }\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCompressDisplay:'',\n            isJsonFormatDisplay:'none',\n            dubboGroup:'',\n            leg: {\"userId\":\"*******\",\"ipAddr\":\"10.10.10.10\",\"appKey\":\"*******\",\"openId\":\"******\",\"unionId\":\"********\",\"deviceId\":\"*******\",\"appv\":\"\",\"os\":\"\"}\n        }\n    }\n    /**\n     * 获取子组件SingleTag中用户输入的tag标签\n     */\n    getCaseTags = (tags) => {\n        debugger\n        this.props.TestCaseManagerStore.insertCaseTags(tags)\n    };\n    /**\n     * 输入框和单选按钮产生的change事件\n     * @param n\n     * @param e\n     */\n    inputChange(n,e) {\n        let obj={};\n        obj[n]=e.target.value;\n        this.props.TestCaseManagerStore.changeDetailData(n,e.target.value);\n    }\n    optionChange(n,v,Option) {\n        this.props.TestCaseManagerStore.changeDetailData(n,v.toString() || '');\n    }\n\n    /**\n     * 保存用例\n     */\n    insert = (e) => {\n\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.TestCaseManagerStore.insert(this.props.ApiManagerStore.detailData,true)\n            }\n        });\n    }\n    /**\n     * 压缩参数\n     */\n    compressParams = () => {\n        this.setState({\n            'isCompressDisplay':'',\n            'isJsonFormatDisplay':'none',\n        })\n    }\n    /**\n     * json格式化\n     */\n    jsonFormat = () => {\n        this.setState({\n            'isCompressDisplay':'none',\n            'isJsonFormatDisplay':'',\n        })\n    }\n    timerExe = async(result) => {\n        // let data = await this.props.ExeRecordStore.getDetailData(result.data)\n        this.timerDate = setInterval(()=> this.tick(result.data));\n    }\n    handleClearTimeout(){\n        this.timerDate && clearInterval(this.timerDate);\n    }\n    componentWillUnmount(){\n        this.handleClearTimeout()\n    }\n    tick = async(data) => {\n        let detailData = await this.props.ExeRecordStore.getDetailData(data)\n        if(detailData.status == 2){\n            this.handleClearTimeout()\n        }\n    }\n\n    /**\n     * 保存并执行\n     */\n    testCaseExe = async () => {\n        let caseId = getUrlParam('caseId',window.location.search);\n        console.log(\"caseId:\" , caseId)\n        if(caseId == \"\"){\n            message.warn(\"请先保存用例再执行！\")\n            return\n        }\n\n        let abc = await this.props.TestCaseManagerStore.insert(this.props.ApiManagerStore.tags,this.props.ApiManagerStore.detailData,false)\n        if(abc != 200){\n            return\n        }\n        let params =  {\"id\":null,\"caseIds\":[caseId],\"scheduleType\":1,\"env\":this.props.GlobalManagerStore.varValue}\n        let result = await this.props.TestCaseManagerStore.exeCase(params,'case');\n        if(typeof result != \"undefined\"){\n            if(result.code == 200){\n                this.timerExe(result)\n\n                this.props.TestCaseManagerStore.showCaseDrawer()\n            }else{\n                message.warn(\"执行出现错误\")\n            }\n        }\n    }\n    handleCopy(copy){\n        message.success(\"复制成功\")\n    }\n    changeInput(e){\n        this.props.GlobalManagerStore.varValue = e.target.value\n    }\n    render(){\n        const {varValue} = this.props.GlobalManagerStore\n        const { getFieldDecorator} = this.props.form;\n        const {detailData,tags} = this.props.ApiManagerStore\n        const {exeDetailData} = this.props.ExeRecordStore\n        const {insertButtonStatus,updateButtonStatus,caseDetailData,drawerVisible,caseTags} = this.props.TestCaseManagerStore\n        var mockJson = \"\"\n        if(typeof caseDetailData.paramScript != \"undefined\"){\n            try {\n                if (typeof JSON.parse(caseDetailData.paramScript) == \"object\" ) {\n                    mockJson = JSON.parse(caseDetailData.paramScript)\n                }\n            }catch(e) {\n                console.log('error：'+e);\n            }\n        }\n        return(\n            <div className=\"container-bg\" style={{'marginLeft':'15px'}}>\n                <Form  layout=\"inline\" className=\"ant-advanced-search-form p-xs pb-0\" onSubmit={this.insert}>\n                    <Alert message=\"接口信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"\">\n                            <Tag color=\"geekblue\">接口归属应用：{detailData.appName}</Tag>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\">\n                            <Tag color=\"geekblue\">接口归属模块：{detailData.moduleName}</Tag>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"接口路径\">\n                            {getFieldDecorator('apiClassName', {\n                                initialValue: detailData.apiClassName,\n                                rules: [{ required: false, message: '请填写接口路径!' }],\n                            })(\n                                <Input disabled style={{ width: 823 }} />\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"方法名\">\n                            {getFieldDecorator('apiMethodName', {\n                                initialValue: detailData.apiMethodName,\n                                rules: [{ required: false, message: '请填写方法名!' }],\n                            })(\n                                <Input disabled style={{ width: 375 }}/>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"接口名\">\n                            <Input disabled style={{ width: 389 }} value={detailData.name}/>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"接口标签\">\n                            {tags.map((tag, index) => {\n                                const isLongTag = tag.length > 20;\n                                const tagElem = (\n                                    <Tag key={tag.id} >\n                                        {isLongTag ? `${tag.value.slice(0, 20)}...` : tag.value}\n                                    </Tag>\n                                );\n                                return isLongTag ? (\n                                    <Tooltip title={tag.value} key={tag.id}>\n                                        {tagElem}\n                                    </Tooltip>\n                                ) : (\n                                    tagElem\n                                );\n                            })}\n                        </FormItem>\n                    </Row>\n                    <Alert message=\"用例信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"用例名\">\n                            {getFieldDecorator('name', {\n                                initialValue: caseDetailData.name,\n                                rules: [{ required: true, message: '请填写用例名!' }],\n                            })(\n                                <Input style={{ width: 365 }} pllaceholder=\"请填写用例名\" onChange={this.inputChange.bind(this,'name')}/>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"优先级\">\n                            <span>\n                                 {getFieldDecorator('priority', {\n                                     initialValue: caseDetailData.priority,\n                                     rules: [{ required: true, message: '请选择优先级!' }],\n                                 })(\n                                     <Select style={{ width: 120 }} onChange={this.optionChange.bind(this,'priority')}>\n                                         <Option value=\"0\">0</Option>\n                                         <Option value=\"1\">1</Option>\n                                         <Option value=\"2\">2</Option>\n                                         <Option value=\"3\">3</Option>\n                                     </Select>\n                                 )}\n                                &nbsp;&nbsp;&nbsp;\n                                <Tag color=\"magenta\"> P0为最高，P3为最低 </Tag>\n                            </span>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"用例标签\">\n                            <SingleTag tags={caseTags} getTags={this.getCaseTags}/>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"描述\">\n                            {getFieldDecorator('desc', {\n                                initialValue: caseDetailData.desc,\n                                rules: [{ required: false, message: '请填写用例描述!' }],\n                            })(\n                                <TextArea rows={3} style={{ width: 852 }} onChange={this.inputChange.bind(this,'desc')}/>\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Alert message=\"接口参数信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            <b>接口入参：</b>\n                            <ReactJson src={eval(\"(\"+detailData.argsJsonFormat+\")\")}  enableClipboard={this.handleCopy} name={null}  theme=\"google\" style={{border:'1px solid #ccc','height':'180px','maxHeight':'180px','overflow-y':'auto' }}/>\n                            <b>接口出参：</b>\n                            <ReactJson src={eval(\"(\"+detailData.resultJsonFormat+\")\")}  enableClipboard={this.handleCopy} name={null} theme=\"google\" style={{border:'1px solid #ccc','height':'189px','maxHeight':'189px','overflow-y':'auto' }}/>\n                        </div>\n                        <div style={{float:'right',width:'51%'}}>\n                            <FormItem {...this.formItemLayout} label=\"\" >\n                                {getFieldDecorator('paramScript', {\n                                    initialValue: caseDetailData.paramScript,\n                                    rules: [{ required: false, message: '请填写接口参数信息!' }],\n                                })(\n                                    <TextArea rows={16} style={{'width':'1300px','marginTop':'19px',display:this.state.isCompressDisplay }} onChange={this.inputChange.bind(this,'paramScript')}/>\n                                )}\n                            </FormItem>\n                            <ReactJson src={mockJson}  enableClipboard={false}  name={null} style={{\"border\":'1px solid #ccc','height':'343px','marginBottom':'5px','maxHeight':'343px','overflow-y':'auto',\"display\":this.state.isJsonFormatDisplay  }}/>\n\n                            <Button type=\"primary\" style={{marginBottom:'5px'}} onClick={this.compressParams}>压缩</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button type=\"primary\" style={{marginBottom:'5px'}} onClick={this.jsonFormat}>格式化</Button>\n                        </div>\n                    </Row>\n                    <Alert message=\"dubbo contextParams\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px','marginTop':'6px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            {/*{*/}\n                                {/*getUrlParam('caseId',window.location.search) != \"\" ?*/}\n                                    {/*<TextArea rows={6} style={{ width: 600}} value={caseDetailData.contextParamScript} placeholder='如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context,如：{\"userId\":\"5c0e5e0c881f449b9fe50923ea8f6183\"}，也可以参考右侧格式' onChange={this.inputChange.bind(this,'contextParamScript')}/> : <TextArea rows={6} style={{ width: 600}}  placeholder='如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context,如：{\"userId\":\"5c0e5e0c881f449b9fe50923ea8f6183\"}，也可以参考右侧格式' onChange={this.inputChange.bind(this,'contextParamScript')}/>*/}\n                            {/*}*/}\n                            {getFieldDecorator('contextParamScript', {\n                                initialValue: caseDetailData.contextParamScript,\n                                rules: [{ required: false, message: '多个assert的规则需要换行写!' }],\n                            })(\n                                <TextArea rows={6}  style={{ width: 600 }}  onChange={this.inputChange.bind(this,'contextParamScript')}/>\n                            )}\n                        </div>\n                        <div style={{float:'right',width:'50%'}}>\n                            如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context，如：\n                            <ReactJson src={this.state.leg} name={null}  enableClipboard={this.handleCopy} style={{border:'1px solid #ccc','height':'113px','marginBottom':'5px','maxHeight':'113px','overflow-y':'auto'  }}/>\n                        </div>\n                    </Row>\n                    <Alert message=\"结果校验规则（如：assert self.result.data != null:'结果data不能为空'）\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            {/*{*/}\n                                {/*getUrlParam('caseId',window.location.search) != \"\" ?*/}\n                                    {/*<TextArea rows={6} style={{ width: 600 }} value={caseDetailData.validScript} placeholder=\"多个assert的规则需要换行写\" onChange={this.inputChange.bind(this,'validScript')}/>*/}\n                                    {/*:*/}\n                                    {/*<TextArea rows={6} style={{ width: 600 }} placeholder=\"多个assert的规则需要换行写\" onChange={this.inputChange.bind(this,'validScript')}/>*/}\n                            {/*}*/}\n                            {getFieldDecorator('validScript', {\n                                initialValue: caseDetailData.validScript,\n                                rules: [{ required: false, message: '多个assert的规则需要换行写!' }],\n                            })(\n                                <TextArea rows={6}  style={{ width: 600 }}  onChange={this.inputChange.bind(this,'validScript')}/>\n                            )}\n                        </div>\n                        <div style={{float:'right',width:'50%'}}>\n                            示例一：校验后返回布尔值作为校验结果(不推荐)return self.result.data != null<br/>\n                            示例二：使用强断言校验结果(推荐)assert self.result.data != null <br/>\n                            示例三：使用断言校验结果(推荐)assert self.result.data != null:'data不能为空'<br/>\n                            示例四：多个判断<br/>\n                            assert self.result.data != null:'结果data不能为空' <br/>\n                            assert self.result.data.itemId !=null:'结果itemId不能为空'  &nbsp;&nbsp;<a href=\"http://k.yangtuojia.com/pages/viewpage.action?pageId=18827049\" target=\"_blank\" ><Icon type=\"question-circle\" /> 更多写法帮助</a><br/>\n                        </div>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:insertButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}}>添加用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}}>修改用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}} onClick={()=>{window.open(\"/edit_testcase?type=copy&apiId=\" + getUrlParam('apiId',window.location.search) + \"&caseId=\" + getUrlParam('caseId',window.location.search))}}>复制用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" style={{marginBottom:'8px'}} onClick={this.testCaseExe}>保存并执行</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            {getFieldDecorator('dubboGroup', {\n                                initialValue: varValue,\n                                rules: [{ required: false, message: '请输入执行环境!' }],\n                            })(\n                                <Input placeholder=\"请输入执行环境\" style={{ width: 280 }}  allowClear={true} style={{ width: 220 }}  onChange={this.changeInput.bind(this) }/>\n                            )}\n                        </FormItem>\n\n                    </Row>\n                </Form>\n                <ExeCaseDrawer exeDetailData={exeDetailData} drawerVisible={drawerVisible}></ExeCaseDrawer>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(InsertIndex)"],"sourceRoot":""}