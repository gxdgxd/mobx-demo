{"version":3,"sources":["container/ExeRecord/config.js","container/ExeRecord/ResultMessageModal.js","container/ExeRecord/DetailModal.js","container/ExeRecord/index.js"],"names":["TextArea","columns","context","title","dataIndex","key","render","row","color","name","width","record","onClick","showModal","bind","id","detailColumns","text","testCase","length","substr","str","validScript","param","contextParamScript","desc","apiId","testApi","apiClassName","apiMethodName","content","priority","creatorName","a","src","eval","sampleResult","style","border","showResultMessageModal","message","type","apiHref","updateHref","href","target","className","ResultMessageModal","inject","observer","props","state","this","ExeRecordStore","hideResultMessageModal","resultMessageModalVisible","destroyOnClose","okText","visible","onOk","hideModal","onCancel","cancelText","Component","DetailModal","modalVisible","detailData","caseData","toJS","caseExeRecords","statusStr","status","backgroundColor","gutter","span","exeTimeStr","env","operatorName","testCaseCount","succeedCount","failedCount","bordered","dataSource","Option","FormItem","Item","RangePicker","ExeRecordIndex","onChangePage","page","initData","formItemLayout","labelCol","wrapperCol","handleSearch","handleCreatorSearch","value","CommonStore","getAllCreators","setState","data","handleCreatorChange","changeTableRequestData","json_str","setBreadcrumb","n","e","v","getDetailData","dates","dateStrings","pageNo","pageSize","totalCount","exeDetailData","allCreators","mydataSource","label","ranges","Today","moment","startOf","endOf","onChange","onDateChange","placeholder","allowClear","inputChange","showSearch","defaultActiveFirstOption","showArrow","filterOption","onSearch","notFoundContent","map","d","userId","realName","optionChange","htmlType","pagination","current","total"],"mappings":"o8CAKMA,SAAQ,6CAGDC,QAAU,SAACC,GAAD,MAAa,CAChC,CACIC,MAAO,iBACPC,UAAW,cACXC,IAAK,eAET,CACIF,MAAO,2BACPC,UAAW,gBACXC,IAAK,iBAET,CACIF,MAAO,2BACPC,UAAW,aACXC,IAAK,cAET,CACIF,MAAO,eACPC,UAAW,MACXC,IAAK,OAET,CACIF,MAAO,2BACPC,UAAW,gBACXC,IAAK,iBAET,CACIF,MAAO,qBACPC,UAAW,eACXC,IAAK,gBAET,CACIF,MAAO,qBACPC,UAAW,cACXC,IAAK,cACLC,OAAQ,SAACC,GACL,OACI,mEAAMC,MAAOD,EAAM,EAAI,MAAQ,WAAYA,KAIvD,CACIJ,MAAO,qBACPC,UAAW,eACXC,IAAK,gBAET,CACIF,MAAO,2BACPC,UAAW,SACXC,IAAK,SACLC,OAAQ,SAACC,GACL,IAAIE,EAAO,GACX,MAAU,KAAPF,GACCE,EAAO,qBAEH,uEAAM,uGAAKD,MAAM,QAAQC,KAEjB,KAAPF,GACLE,EAAO,qBAEH,uEAAM,uGAAKD,MAAM,WAAWC,KAEpB,KAAPF,GACLE,EAAO,qBAEH,uEAAM,uGAAKD,MAAM,WAAWC,UAH9B,IAQd,CACIN,MAAO,eACPO,MAAO,MACPL,IAAK,YACLC,OAAO,SAACC,EAAII,GACR,OACI,sEACI,uEACI,gEAAGC,QAASV,EAAQW,UAAUC,KAAKZ,EAAQS,EAAOI,KAAlD,gBADJ,cASPC,cAAgB,SAAhBA,cAAiBd,SAAD,MAAa,CAEtC,CACIC,MAAO,2BACPC,UAAW,OACXC,IAAK,OACLK,MAAM,MACNJ,OAAO,SAASW,EAAMN,GAClB,IAAIO,EAAWP,EAAOO,SAClBT,EAAOS,EAAST,KAAKU,OAAS,GAAKD,EAAST,KAAKW,OAAO,EAAE,IAAM,MAAQF,EAAST,KACjFY,EAAM,sEACN,8FAAYH,EAASH,IAAU,sEAC/B,wGAAYG,EAAST,MAAY,sEACjC,wGAAYS,EAASI,aAAmB,sEACxC,4FAAUX,EAAOY,OAAa,sEAC9B,wGAAYL,EAASM,oBAA0B,sEAC/C,4FAAUN,EAASO,MAAY,sEAC/B,8FAAYP,EAASQ,OAAa,sEAClC,wGAAYR,EAASS,QAAQC,cAAoB,sEACjD,kGAAWV,EAASS,QAAQE,eAAqB,sEACjD,kGAAWX,EAASS,QAAQlB,MAAY,uEAE5C,OACI,uEACI,2GAASqB,QAAST,GACf,mEAAMb,MAAM,WAAWC,OAM1C,CACIN,MAAO,qBACPC,UAAW,WACXC,IAAK,WACLK,MAAM,KACNJ,OAAO,SAASW,EAAMN,GAClB,IAAIoB,EAAWpB,EAAOO,SAASa,SAC/B,OACI,uEACIA,KAKhB,CACI5B,MAAO,qBACPC,UAAW,cACXC,IAAK,cACLK,MAAM,MACNJ,OAAO,SAASW,EAAMN,GAClB,IAAIqB,EAAcrB,EAAOO,SAASc,YAClC,OACI,uEACIA,KAKhB,CACI7B,MAAO,iBACPC,UAAW,QACXC,IAAK,QACLK,MAAM,KACNJ,OAAO,SAASW,EAAMN,GAClB,IAAIe,EAAQf,EAAOO,SAASQ,MAC5B,OACI,uEACIA,KAKhB,CACIvB,MAAO,uCACPC,UAAW,eACXC,IAAK,eACLK,MAAM,MACNJ,OAAO,gBAASW,KAAMN,QAClB,IAAIsB,EAAI,2DAAC,wDAAD,CAAWC,IAAsB,oBAAVvB,OAAwB,GAAKwB,KAAK,IAAIxB,OAAOyB,aAAa,KAAM3B,KAAM,KAAM4B,MAAO,CAACC,OAAO,iBAAiB,OAAS,QAAQ,aAAe,MAAM,UAAY,QAAQ,aAAa,UAElN,OACI,2GAASR,QAASG,GACd,mEAAMzB,MAAM,WAAZ,2CAKhB,CACIL,MAAO,2BACPC,UAAW,UACXC,IAAK,UACLK,MAAM,MACNJ,OAAO,SAASC,GACZ,IAAIE,EAAO,GACX,OAAU,GAAPF,GACCE,EAAO,2BAEH,uEAAM,uGAAKD,MAAM,WAAWC,KAEpB,GAAPF,GACLE,EAAO,2BAEH,uEAAM,uGAAKD,MAAM,QAAQC,UAH3B,IAQd,CACIN,MAAO,eACPC,UAAW,UACXC,IAAK,UACLK,MAAM,KACNJ,OAAO,SAASW,EAAMN,GAClB,OACI,uEACI,gEAAGC,QAASV,QAAQqC,uBAAuBzB,KAAKZ,QAAQS,EAAO6B,UAAU,wGAAMC,KAAK,aADxF,WAMZ,CACItC,MAAO,eACPO,MAAO,MACPL,IAAK,YACLC,OAAO,SAACC,EAAII,GACR,IAAI+B,EAAU,qBAAuB/B,EAAOO,SAASQ,MACjDiB,EAAa,wBAA0BhC,EAAOO,SAASQ,MAAQ,WAAaf,EAAOO,SAASH,GAChG,OACI,uEACI,gEAAG6B,KAAMD,EAAYE,OAAO,UAA5B,4BADJ,OAEI,gEAAGD,KAAMF,EAASG,OAAO,SAASC,UAAU,SAA5C,6BAFJ,a,2ZCrLDC,EArCdC,YAAO,iB,GACPC,Y,cAGG,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAO,GAFE,E,yEAOdC,KAAKF,MAAMG,eAAeC,2B,+BAErB,IAAD,EACwCF,KAAKF,MAA1CK,EADH,EACGA,0BAA0Bf,EAD7B,EAC6BA,QAEjC,OACI,yBAAKM,UAAU,gBACX,mCACIU,gBAAc,EACdrD,MAAM,2BACNsD,OAAO,eACP/C,MAAM,QACNgD,QAASH,EACTI,KAAMP,KAAKQ,UAAU9C,KAAKsC,MAC1BS,SAAUT,KAAKQ,UAAU9C,KAAKsC,MAC9BU,WAAW,eACXhB,UAAU,SATd,QAS6B,UACzB,6BACKN,S,GA3BQuB,e,MCmFlBC,EAlFdhB,YAAO,iB,GACPC,Y,cAGG,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAO,GAFE,E,yEAOdC,KAAKF,MAAMG,eAAeO,c,6CAEPpB,GACnBY,KAAKF,MAAMG,eAAed,uBAAuBC,K,+BAE5C,IAAD,EACwCY,KAAKF,MAAMG,eAAhDE,EADH,EACGA,0BAA0Bf,EAD7B,EAC6BA,QAD7B,EAE8BY,KAAKF,MAAhCe,EAFH,EAEGA,aAAaC,EAFhB,EAEgBA,WAChBC,EAAWC,YAAKF,EAAWG,gBAC3BC,EAAY,GACQ,GAArBJ,EAAWK,OACVD,EAAY,uBAAK9D,MAAM,QAAX,sBACc,GAArB0D,EAAWK,OAChBD,EAAY,uBAAK9D,MAAM,WAAX,sBACc,GAArB0D,EAAWK,SAChBD,EAAY,uBAAK9D,MAAM,WAAX,uBAEhB,IAAM6B,EAAQ,CACV,aAAe,OAEnB,OACI,yBAAKS,UAAU,gBACX,mCACIU,gBAAc,EACdrD,MAAM,2BACNO,MAAM,QACN+C,OAAO,eACPC,QAASO,EACTN,KAAMP,KAAKQ,UAAU9C,KAAKsC,MAC1BS,SAAUT,KAAKQ,UAAU9C,KAAKsC,MAC9BU,WAAW,eACXhB,UAAU,SATd,QAS6B,UACzB,uBAAON,QAAQ,2BAAOC,KAAK,OAAOJ,MAAO,CAACmC,gBAAgB,UAAUlC,OAAO,MAAM,aAAe,UAEhG,uBAAKmC,OAAQ,GAAIpC,MAAOA,GACpB,uBAAKqC,KAAM,GAAX,qCACeJ,GAEf,uBAAKI,KAAM,GAAX,iCACUR,EAAWS,YAErB,uBAAKD,KAAM,GAAX,iCACUR,EAAWU,KAErB,uBAAKF,KAAM,GAAX,2BACSR,EAAWW,eAGxB,uBAAKJ,OAAQ,GAAIpC,MAAOA,GACpB,uBAAKqC,KAAM,GAAX,qCACgBR,EAAWY,eAE3B,uBAAKJ,KAAM,GAAX,2BACSR,EAAWa,cAEpB,uBAAKL,KAAM,GAAX,2BACSR,EAAWc,cAGxB,uBAAOxC,QAAQ,2BAAOC,KAAK,OAAOJ,MAAO,CAACmC,gBAAgB,UAAUlC,OAAO,MAAM,aAAe,UAChG,uBACI2C,UAAQ,EACRhF,QAASe,YAAcoC,MACvB8B,WAAYf,IAChB,kBAAC,EAAD,CAAoBZ,0BAA2BA,EAA2Bf,QAASA,U,GAzE7EuB,e,MCHpBoB,EAAS,IAAOA,OAEhBC,EAAW,IAAKC,KACdC,E,IAAAA,YAIFC,EAFLvC,YAAO,iBAAiB,c,GACxBC,Y,cAQG,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAcVsC,aAAe,SAAAC,GACX,EAAKvC,MAAMG,eAAeqC,SAASD,IAhBrB,EAsBlBE,eAAiB,CACbC,SAAU,CAAElB,KAAM,GAClBmB,WAAY,CAAEnB,KAAM,KAxBN,EA0BlBoB,aAAe,WACX,EAAK5C,MAAMG,eAAeqC,SAAS,IA3BrB,EA6BlBK,oBAAsB,SAAAC,GACdA,EACA,EAAK9C,MAAM+C,YAAYC,eAAeF,GAEtC,EAAKG,SAAS,CAAEC,KAAM,MAjCZ,EAqClBC,oBAAsB,SAAAL,GAClB,EAAKG,SAAS,CAAEH,UAChB,EAAK9C,MAAMG,eAAeiD,uBAAuB,aAAaN,IArC9D,EAAK7C,MAAO,CACRoD,SAAS,IAHC,E,iFALdnD,KAAKF,MAAMsD,cAAc,CACrB,CAAC/F,KAAM,8BAEX2C,KAAKF,MAAMG,eAAeqC,SAAS,O,iDAQ3Be,EAAEC,GACVtD,KAAKF,MAAMG,eAAeiD,uBAAuBG,EAAEC,EAAE7D,OAAOmD,S,mCAEnDS,EAAEE,GACXvD,KAAKF,MAAMG,eAAeiD,uBAAuBG,EAAEE,GAAK,M,gCAElD5F,GACNqC,KAAKF,MAAMG,eAAeuD,cAAc7F,K,mCAK/B8F,EAAOC,GAChB1D,KAAKF,MAAMG,eAAeiD,uBAAuB,gBAAgBQ,EAAY,IAC7E1D,KAAKF,MAAMG,eAAeiD,uBAAuB,kBAAkBQ,EAAY,M,+BAqB1E,IAAD,EACuE1D,KAAKF,MAAMG,eAA/E6B,EADH,EACGA,WAAWjB,EADd,EACcA,aAAa8C,EAD3B,EAC2BA,OAAOC,EADlC,EACkCA,SAASC,EAD3C,EAC2CA,WAAWC,EADtD,EACsDA,cACnDC,EAAe/D,KAAKF,MAAM+C,YAA1BkB,YACDC,EAAelC,EAAWd,OAChC,OACI,yBAAKtB,UAAU,gBACX,uBAAOA,UAAU,sCACb,uBAAK2B,OAAQ,IACT,uBAAKC,KAAM,GACP,kBAACU,EAAD,iBAAchC,KAAKuC,eAAnB,CAAmC0B,MAAM,iBACrC,kBAAC/B,EAAD,CACIgC,OAAQ,CACJC,MAAO,CAACC,MAAUA,OAClB,aAAc,CAACA,MAASC,QAAQ,SAAUD,MAASE,MAAM,WAE7DC,SAAUvE,KAAKwE,iBAI3B,uBAAKlD,KAAM,GACP,kBAACU,EAAD,iBAAchC,KAAKuC,eAAnB,CAAmC0B,MAAM,mBACrC,uBAAOQ,YAAY,mCAAWC,YAAY,EAAOH,SAAUvE,KAAK2E,YAAYjH,KAAKsC,KAAK,mBAG9F,uBAAKsB,KAAM,GACP,kBAACU,EAAD,iBAAchC,KAAKuC,eAAnB,CAAmC0B,MAAM,6BACrC,uBAAOQ,YAAY,6CAAWC,YAAY,EAAMH,SAAUvE,KAAK2E,YAAYjH,KAAKsC,KAAK,YAIjG,uBAAKqB,OAAQ,IACT,uBAAKC,KAAM,GACP,kBAACU,EAAD,iBAAchC,KAAKuC,eAAnB,CAAmC0B,MAAM,uBACrC,uBACIW,YAAU,EACVhC,MAAO5C,KAAKD,MAAM6C,MAClB6B,YAAY,iEACZxF,MAAOe,KAAKF,MAAMb,MAClB4F,0BAA0B,EAC1BC,WAAW,EACXC,cAAc,EAAQL,YAAY,EAClCM,SAAUhF,KAAK2C,oBACf4B,SAAUvE,KAAKiD,oBACfgC,gBAAiB,MAEhBlB,EAAYmB,KAAI,SAAAC,GAAC,OAAI,kBAACpD,EAAD,CAAQ9E,IAAKkI,EAAEC,QAASD,EAAEE,gBAI5D,uBAAK/D,KAAM,GACP,kBAACU,EAAD,iBAAchC,KAAKuC,eAAnB,CAAmC0B,MAAM,6BACrC,uBAAQQ,YAAY,6CAAWC,YAAY,EAAOH,SAAUvE,KAAKsF,aAAa5H,KAAKsC,KAAK,WACpF,kBAAC+B,EAAD,CAAQa,MAAM,KAAd,sBACA,kBAACb,EAAD,CAAQa,MAAM,KAAd,sBACA,kBAACb,EAAD,CAAQa,MAAM,KAAd,yBAIZ,uBAAKtB,KAAM,GACP,uBAAQjC,KAAK,UAAUkG,SAAS,SAAS/H,QAASwC,KAAK0C,cACnD,uBAAMrD,KAAK,WADf,oBAMZ,uBAAKJ,MAAO,CAAC,UAAY,QACrB,uBACI4C,UAAQ,EACRhF,QAASA,YAAQmD,MAAOwF,YAAY,EACpC1D,WAAYkC,IAChB,uBAAYO,SAAUvE,KAAKoC,aAAcwB,SAAUA,EAAU6B,QAAS9B,EAAS+B,MAAO7B,EAAY5E,MAAO,CAAC,UAAY,MAAM,MAAQ,WACpI,kBAAC,EAAD,CAAa4B,aAAcA,EAAcC,WAAYgD,U,GAvH5CnD,e,MA8HdwB","file":"static/js/13.807cad19.chunk.js","sourcesContent":["import React  from 'react';\nimport {Input,Icon,Popover,Tag,Tooltip} from 'antd';\nimport common from \"../../style/common.css\";\nimport ReactJson from 'react-json-view'\n\nconst TextArea  = Input;\n\n\nexport const columns = (context) => [\n    {\n        title: '场景ID',\n        dataIndex: 'testSceneId',\n        key: 'testSceneId',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'testSceneName',\n        key: 'testSceneName'\n    },\n    {\n        title: '执行时间',\n        dataIndex: 'exeTimeStr',\n        key: 'exeTimeStr',\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '总用例数',\n        dataIndex: 'testCaseCount',\n        key: 'testCaseCount',\n    },\n    {\n        title: '成功数',\n        dataIndex: 'succeedCount',\n        key: 'succeedCount',\n    },\n    {\n        title: '失败数',\n        dataIndex: 'failedCount',\n        key: 'failedCount',\n        render: (row) => {\n            return (\n                <font color={row > 0 ? \"red\" : \"#696969\"}>{row}</font>\n            )\n        }\n    },\n    {\n        title: '操作人',\n        dataIndex: 'operatorName',\n        key: 'operatorName',\n    },\n    {\n        title: '执行状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (row) => {\n            let name = \"\"\n            if(row == \"0\"){\n                name = \"待执行\"\n                return (\n                    <span><Tag color=\"#f50\">{name}</Tag></span>\n                )\n            }else if(row == \"1\"){\n                name = \"执行中\"\n                return (\n                    <span><Tag color=\"#2db7f5\">{name}</Tag></span>\n                )\n            }else if(row == \"2\"){\n                name = \"已完成\"\n                return (\n                    <span><Tag color=\"#87d068\">{name}</Tag></span>\n                )\n            }\n        }\n    },\n    {\n        title: '操作',\n        width: '10%',\n        key: 'operation',\n        render:(row,record) => {\n            return (\n                <div>\n                    <span>\n                        <a onClick={context.showModal.bind(context,record.id)}>详情</a> &nbsp;\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const detailColumns = (context) => [\n\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            let testCase = record.testCase\n            var name = testCase.name.length > 16 ? testCase.name.substr(0,16) + '...' : testCase.name;\n            let str = <div>\n                <span>用例ID：{testCase.id}</span><br/>\n                <span>用例名称：{testCase.name}</span><br/>\n                <span>校验规则：{testCase.validScript}</span><br/>\n                <span>入参：{record.param}</span><br/>\n                <span>其他参数：{testCase.contextParamScript}</span><br/>\n                <span>描述：{testCase.desc}</span><br/>\n                <span>接口ID：{testCase.apiId}</span><br/>\n                <span>接口路径：{testCase.testApi.apiClassName}</span><br/>\n                <span>方法名：{testCase.testApi.apiMethodName}</span><br/>\n                <span>接口名：{testCase.testApi.name}</span><br/>\n            </div>\n            return (\n                <span>\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%',\n        render:function(text, record){\n            var priority = record.testCase.priority;\n            return (\n                <span>\n                   {priority}\n                </span>\n            )\n        }\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%',\n        render:function(text, record){\n            var creatorName = record.testCase.creatorName;\n            return (\n                <span>\n                   {creatorName}\n                </span>\n            )\n        }\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n        render:function(text, record){\n            var apiId = record.testCase.apiId\n            return (\n                <span>\n                   {apiId}\n                </span>\n            )\n        }\n    },\n    {\n        title: '接口返回结果',\n        dataIndex: 'sampleResult',\n        key: 'sampleResult',\n        width:'20%',\n        render:function(text, record){\n            let a = <ReactJson src={typeof record == 'undefined' ? \"\" : eval(\"(\"+record.sampleResult+\")\")} name={null} style={{border:'1px solid #ccc','height':'173px','marginBottom':'5px','maxHeight':'173px','overflow-y':'auto'  }}/>\n\n            return (\n                <Popover content={a} >\n                    <font color=\"#d2a216\">接口返回结果</font>\n                </Popover>\n            )\n        }\n    },\n    {\n        title: '执行结果',\n        dataIndex: 'succeed',\n        key: 'succeed',\n        width:'10%',\n        render:function(row){\n            let name = \"\"\n            if(row == true){\n                name = \"执行成功\"\n                return (\n                    <span><Tag color=\"#87d068\">{name}</Tag></span>\n                )\n            }else if(row == false){\n                name = \"执行失败\"\n                return (\n                    <span><Tag color=\"#f50\">{name}</Tag></span>\n                )\n            }\n        }\n    },\n    {\n        title: '信息',\n        dataIndex: 'message',\n        key: 'message',\n        width:'6%',\n        render:function(text, record){\n            return (\n                <span>\n                    <a onClick={context.showResultMessageModal.bind(context,record.message)}><Icon type=\"message\" /></a> &nbsp;\n                </span>\n            )\n        }\n    },\n    {\n        title: '操作',\n        width: '15%',\n        key: 'operation',\n        render:(row,record) => {\n            let apiHref = '/update_api?apiId=' + record.testCase.apiId\n            let updateHref = '/edit_testcase?apiId=' + record.testCase.apiId + \"&caseId=\" + record.testCase.id\n            return (\n                <span>\n                    <a href={updateHref} target=\"_blank\">查看用例</a>&nbsp;\n                    <a href={apiHref} target=\"_blank\" className=\"vLine\"> 查看接口</a>&nbsp;\n                </span>\n            )\n        }\n    }\n];\n\n\n\n\n","import React, {Component} from 'react';\nimport { observable, action, computed ,toJS} from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Modal} from 'antd';\n\n@inject('ExeRecordStore')\n@observer\nclass ResultMessageModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.state= {\n        }\n    }\n\n    hideModal(){\n        this.props.ExeRecordStore.hideResultMessageModal();\n    }\n    render(){\n        const {resultMessageModalVisible,message} = this.props\n\n        return(\n            <div className=\"container-bg\">\n                <Modal\n                    destroyOnClose\n                    title=\"结果信息\"\n                    okText=\"关闭\"\n                    width=\"800px\"\n                    visible={resultMessageModalVisible}\n                    onOk={this.hideModal.bind(this)}\n                    onCancel={this.hideModal.bind(this)}\n                    cancelText=\"取消\"\n                    className=\"model\"  width=\"1100px\">\n                    <pre>\n                        {message}\n                    </pre>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ResultMessageModal;","import React, {Component} from 'react';\nimport { observable, action, computed ,toJS} from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Alert,Row, Col,Tag,Modal} from 'antd';\nimport {detailColumns} from \"./config\";\nimport ResultMessageModal from \"./ResultMessageModal\";\n\n\n@inject('ExeRecordStore')\n@observer\nclass DetailModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.state= {\n        }\n    }\n\n    hideModal(){\n        this.props.ExeRecordStore.hideModal();\n    }\n    showResultMessageModal(message){\n        this.props.ExeRecordStore.showResultMessageModal(message);\n    }\n    render(){\n        const {resultMessageModalVisible,message} = this.props.ExeRecordStore\n        const {modalVisible,detailData} = this.props\n        let caseData = toJS(detailData.caseExeRecords)\n        let statusStr = \"\"\n        if(detailData.status == 0){\n            statusStr = <Tag color=\"#f50\">待执行</Tag>\n        }else if(detailData.status == 1){\n            statusStr = <Tag color=\"#2db7f5\">执行中</Tag>\n        }else if(detailData.status == 2){\n            statusStr = <Tag color=\"#87d068\">已完成</Tag>\n        }\n        const style = {\n            'marginBottom':'8px'\n        }\n        return(\n            <div className=\"container-bg\">\n                <Modal\n                    destroyOnClose\n                    title=\"执行详情\"\n                    width=\"800px\"\n                    okText=\"关闭\"\n                    visible={modalVisible}\n                    onOk={this.hideModal.bind(this)}\n                    onCancel={this.hideModal.bind(this)}\n                    cancelText=\"取消\"\n                    className=\"model\"  width=\"1100px\">\n                    <Alert message=\"执行情况\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n\n                    <Row gutter={48} style={style}>\n                        <Col span={4}>\n                           &nbsp;任务状态：{statusStr}\n                        </Col>\n                        <Col span={6}>\n                            执行时间：{detailData.exeTimeStr}\n                        </Col>\n                        <Col span={7}>\n                            执行环境：{detailData.env}\n                        </Col>\n                        <Col span={4}>\n                            操作人：{detailData.operatorName}\n                        </Col>\n                    </Row>\n                    <Row gutter={48} style={style}>\n                        <Col span={4}>\n                            &nbsp;总用例数：{detailData.testCaseCount}\n                        </Col>\n                        <Col span={6}>\n                            成功数：{detailData.succeedCount}\n                        </Col>\n                        <Col span={5}>\n                            失败数：{detailData.failedCount}\n                        </Col>\n                    </Row>\n                    <Alert message=\"用例信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Table\n                        bordered\n                        columns={detailColumns(this)}\n                        dataSource={caseData} />\n                    <ResultMessageModal resultMessageModalVisible={resultMessageModalVisible} message={message}/>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default DetailModal;","import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Input,Select,Form,Row, Col,Button,Icon,DatePicker,Pagination} from 'antd';\nimport moment from 'moment';\nimport {columns} from \"./config\";\nimport DetailModal from \"./DetailModal\";\nconst Option = Select.Option;\n\nconst FormItem = Form.Item;\nconst { RangePicker } = DatePicker;\n\n@inject('ExeRecordStore','CommonStore')\n@observer\nclass ExeRecordIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '执行记录'},\n        ]);\n        this.props.ExeRecordStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            json_str:{}\n        }\n    }\n    inputChange(n,e) {\n        this.props.ExeRecordStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.ExeRecordStore.changeTableRequestData(n,v || '');\n    }\n    showModal(id){\n        this.props.ExeRecordStore.getDetailData(id)\n    }\n    onChangePage = page => {\n        this.props.ExeRecordStore.initData(page);\n    };\n    onDateChange(dates, dateStrings) {\n        this.props.ExeRecordStore.changeTableRequestData('exeTimeBefore',dateStrings[0]);\n        this.props.ExeRecordStore.changeTableRequestData('finishTimeAfter',dateStrings[1]);\n    }\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n    handleSearch = () => {\n        this.props.ExeRecordStore.initData(1);\n    }\n    handleCreatorSearch = value => {\n        if (value) {\n            this.props.CommonStore.getAllCreators(value)\n        } else {\n            this.setState({ data: [] });\n        }\n    };\n\n    handleCreatorChange = value => {\n        this.setState({ value });\n        this.props.ExeRecordStore.changeTableRequestData('operatorId',value);\n    };\n    render(){\n        const {dataSource,modalVisible,pageNo,pageSize,totalCount,exeDetailData} = this.props.ExeRecordStore\n        const {allCreators} = this.props.CommonStore\n        const mydataSource = dataSource.toJS()\n        return(\n            <div className=\"container-bg\">\n                <Form  className=\"ant-advanced-search-form p-xs pb-0\">\n                    <Row gutter={48}>\n                        <Col span={8}>\n                            <FormItem {...this.formItemLayout} label=\"时间\">\n                                <RangePicker\n                                    ranges={{\n                                        Today: [moment(), moment()],\n                                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                    }}\n                                    onChange={this.onDateChange}\n                                />\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"场景ID\">\n                                <Input placeholder=\"请输入场景ID\"  allowClear={true}  onChange={this.inputChange.bind(this,'testSceneId')}/>\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"执行环境\">\n                                <Input placeholder=\"请输入执行环境\"  allowClear={true} onChange={this.inputChange.bind(this,'env')}/>\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row gutter={48}>\n                        <Col span={8}>\n                            <FormItem {...this.formItemLayout} label=\"操作人\">\n                                <Select\n                                    showSearch\n                                    value={this.state.value}\n                                    placeholder=\"请输入真名搜索(非花名)\"\n                                    style={this.props.style}\n                                    defaultActiveFirstOption={false}\n                                    showArrow={false}\n                                    filterOption={false}  allowClear={true}\n                                    onSearch={this.handleCreatorSearch}\n                                    onChange={this.handleCreatorChange}\n                                    notFoundContent={null}\n                                >\n                                    {allCreators.map(d => <Option key={d.userId}>{d.realName}</Option>)}\n                                </Select>\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"执行状态\">\n                                <Select placeholder=\"请选择执行状态\"  allowClear={true}  onChange={this.optionChange.bind(this,'status')}>\n                                    <Option value=\"0\">待执行</Option>\n                                    <Option value=\"1\">执行中</Option>\n                                    <Option value=\"2\">已完成</Option>\n                                </Select>\n                            </FormItem>\n                        </Col>\n                        <Col span={3}>\n                            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSearch}>\n                                <Icon type=\"search\" /> 搜索\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n                <Row style={{'marginTop':'8px'}}>\n                    <Table\n                        bordered\n                        columns={columns(this)} pagination={false}\n                        dataSource={mydataSource} />\n                    <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n                    <DetailModal modalVisible={modalVisible} detailData={exeDetailData}/>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default ExeRecordIndex;"],"sourceRoot":""}