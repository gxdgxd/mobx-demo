{"version":3,"sources":["container/SceneManager/config.js","container/SceneManager/SearchForm.js","container/SceneManager/index.js"],"names":["columns","context","title","dataIndex","key","render","row","name","width","record","href","id","target","className","insertCaseColumns","text","length","substr","str","editTimeStr","creatorName","validScript","paramScript","contextParamScript","desc","apiId","testApi","apiClassName","apiMethodName","content","color","updateHref","apiHref","onConfirm","deleteSceneCase","caseColumns","FormItem","Item","SearchForm","Option","inject","observer","props","handleSubmit","e","preventDefault","SceneManagerStore","initData","formItemLayout","labelCol","span","wrapperCol","state","n","this","changeTableRequestData","value","v","onSubmit","gutter","label","placeholder","onChange","inputChange","bind","style","type","htmlType","onClick","window","open","Component","create","SceneManagerList","TextArea","TreeNode","onChangePage","page","setBreadcrumb","dataSource","pageNo","pageSize","totalCount","mydataSource","toJS","bordered","pagination","current","total"],"mappings":"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","file":"static/js/13.6e4b009c.chunk.js","sourcesContent":["import React  from 'react';\nimport { Popover,Popconfirm} from 'antd';\n\nexport const columns = (context) => [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: '执行方式',\n        dataIndex: 'scheduleType',\n        key: 'scheduleType',\n        render: (row) => {\n            var name = ''\n            if(row == 0){\n                name = \"顺序执行\"\n            }else if(row == 1){\n                name = \"并行执行\"\n            }else if(row == 2){\n                name = \"自定义\"\n            }\n            return (\n                <span>{name}</span>\n            )\n        }\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '用例组',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTime',\n        key: 'editTime',\n    },\n    {\n        title: '操作',\n        width: '10%',\n        key: 'operation',\n        render:(row,record) => {\n            let href = \"/update_scene?sceneId=\" + record.id\n            return (\n                <div>\n                    <span>\n                        <a href={href} target=\"_blank\">修改</a>&nbsp;\n                        <a href=\"$\" target=\"_blank\" className=\"vLine\"> 执行</a>\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const insertCaseColumns = (context) => [\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%'\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width:'15%'\n    },\n    {\n        title: '操作',\n        width: '17%',\n        key: 'operation',\n        render:(row,record) => {\n            let updateHref = '/edit_testcase?apiId=' + record.apiId + \"&caseId=\" + record.id\n            let apiHref = '/api_manager?apiId=' + record.apiId\n            return (\n                <span>\n                    <Popconfirm title=\"确定从此场景中移除此用例吗？\" onConfirm={() => context.deleteSceneCase(record.id)} >\n                      <a href=\"#\">移除</a>&nbsp;\n                    </Popconfirm>\n                    <a href={updateHref} target=\"_blank\"  className=\"vLine\"> 修改用例</a>&nbsp;\n                    <a href={apiHref} target=\"_blank\"  className=\"vLine\"> 接口</a>\n                </span>\n            )\n        }\n    }\n];\n\n\nexport const caseColumns = (context) => [\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%'\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width:'15%'\n    }\n];\n\n\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table, Button, Radio, Select,Icon, Row, Col, Form, DatePicker, Input, Modal } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n\n@inject('SceneManagerStore')\n@observer\nclass SearchForm extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    inputChange(n,e) {\n        this.props.SceneManagerStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.SceneManagerStore.changeTableRequestData(n,v || '');\n    }\n\n    handleSubmit = (e) => {\n        debugger\n        e.preventDefault();\n        this.props.SceneManagerStore.initData(1);\n    }\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n    render(){\n        return (\n            <Form  className=\"ant-advanced-search-form p-xs pb-0\"  onSubmit={this.handleSubmit}>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"场景ID\">\n                            <Input placeholder=\"请输入场景ID\" onChange={this.inputChange.bind(this,'id')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"用例ID\">\n                            <Input placeholder=\"请输入用例ID\" onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"用例名\">\n                            <Input placeholder=\"请输入用例名称\" onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"接口ID\">\n                            <Input placeholder=\"请输入接口ID\" onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"接口名\">\n                            <Input placeholder=\"请输入接口名称\" onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"创建人\">\n                            <Input placeholder=\"请输入接口名称\" onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row gutter={48}>\n                    <Col span={3} style={{'marginLeft':'10px'}}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                <Icon type=\"search\" /> 搜索\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                    <Col span={3} >\n                        <Form.Item>\n                            <Button type=\"primary\"  onClick={()=>{window.open(\"/insert_scene\")}}><Icon type=\"plus\" /> 添加场景</Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(SearchForm)\n\n","import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Input,Tree,Row, Pagination} from 'antd';\nimport {columns} from './config';\nimport SearchForm from './SearchForm';\n\n\nconst { TextArea } = Input;\nconst { TreeNode } = Tree;\n\n@inject('SceneManagerStore')\n@observer\nclass SceneManagerList extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '场景管理'},\n            {name: '添加场景'}\n        ]);\n        this.props.SceneManagerStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n        }\n    }\n    onChangePage = page => {\n        this.props.SceneManagerStore.initData(page);\n    };\n    render(){\n        const {dataSource,pageNo,pageSize,totalCount} = this.props.SceneManagerStore\n        const mydataSource = dataSource.toJS()\n\n        return(\n            <div className=\"container-bg\">\n                <Row>\n                    <SearchForm/>\n                    <Table\n                        bordered\n                        columns={columns(this)} pagination={false}\n                        dataSource={mydataSource}  />\n                    <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default SceneManagerList;"],"sourceRoot":""}