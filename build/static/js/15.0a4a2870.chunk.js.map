{"version":3,"sources":["container/SceneManager/config.js","container/SceneManager/SearchForm.js","container/SceneManager/index.js"],"names":["columns","context","title","dataIndex","key","render","row","name","width","record","href","id","target","onConfirm","exeCase","className","insertCaseColumns","text","length","substr","str","editTimeStr","creatorName","validScript","paramScript","contextParamScript","desc","apiId","testApi","apiClassName","apiMethodName","content","color","updateHref","apiHref","deleteSceneCase","caseColumns","moduleName","FormItem","Item","Option","SearchForm","inject","observer","props","handleCreatorSearch","value","CommonStore","getAllCreators","setState","data","handleCreatorChange","SceneManagerStore","changeTableRequestData","handleSubmit","initData","formItemLayout","labelCol","span","wrapperCol","state","undefined","n","e","this","v","allCreators","gutter","label","placeholder","allowClear","onChange","inputChange","bind","showSearch","style","defaultActiveFirstOption","showArrow","filterOption","onSearch","notFoundContent","map","d","userId","realName","optionChange","type","onClick","window","open","Component","create","SceneManagerList","onChangePage","page","notification","message","description","icon","TestCaseManagerStore","setBreadcrumb","dataSource","pageNo","pageSize","totalCount","mydataSource","toJS","bordered","pagination","current","total"],"mappings":"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","file":"static/js/15.0a4a2870.chunk.js","sourcesContent":["import React  from 'react';\nimport { Popover,Popconfirm} from 'antd';\nimport common from \"../../style/common.css\";\n\nexport const columns = (context) => [\n    {\n        title: '场景ID',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: '执行方式',\n        dataIndex: 'scheduleType',\n        key: 'scheduleType',\n        render: (row) => {\n            var name = ''\n            if(row == 0){\n                name = \"顺序执行\"\n            }else if(row == 1){\n                name = \"并行执行\"\n            }else if(row == 2){\n                name = \"自定义\"\n            }\n            return (\n                <span>{name}</span>\n            )\n        }\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n    },\n\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n    },\n    {\n        title: '操作',\n        width: '13%',\n        key: 'operation',\n        render:(row,record) => {\n            let href = \"/update_scene?sceneId=\" + record.id\n\n            return (\n                <div>\n                    <span>\n                        <a href={href} target=\"_blank\">修改场景</a>&nbsp;\n                        <Popconfirm title=\"确定执行此场景吗？\" onConfirm={() => context.exeCase(record)} >\n                            <a href=\"#\"  className=\"vLine\"> 执行场景</a>\n                        </Popconfirm>\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const insertCaseColumns = (context) => [\n    {\n        title: '用例ID',\n        dataIndex: 'id',\n        key: 'id',\n        width:'7%',\n    },\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'15%'\n    },\n    {\n        title: '操作',\n        width: '25%',\n        key: 'operation',\n        render:(row,record) => {\n            let updateHref = '/edit_testcase?apiId=' + record.apiId + \"&caseId=\" + record.id\n            let apiHref = '/api_manager?apiId=' + record.apiId\n            return (\n                <span>\n                    <Popconfirm title=\"确定从此场景中移除此用例吗？\" onConfirm={() => context.deleteSceneCase(record.id)} >\n                      <a href=\"#\">移除用例</a>&nbsp;\n                    </Popconfirm>\n                    <a href={updateHref} target=\"_blank\"  className=\"vLine\"> 修改用例</a>&nbsp;\n                    <a href={apiHref} target=\"_blank\"  className=\"vLine\"> 查看接口</a>\n                </span>\n            )\n        }\n    }\n];\n\n\nexport const caseColumns = (context) => [\n    {\n        title: '用例ID',\n        dataIndex: 'id',\n        key: 'id',\n        width:'7%',\n    },\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n                <span>接口名：{record.moduleName}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%'\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width:'20%'\n    }\n];\n\n\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table, Button, Radio, Select,Icon, Row, Col, Form, DatePicker, Input, Modal } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n\n@inject('SceneManagerStore','CommonStore')\n@observer\nclass SearchForm extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            data: [],\n            value: undefined,\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    inputChange(n,e) {\n        this.props.SceneManagerStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.SceneManagerStore.changeTableRequestData(n,v || '');\n    }\n    handleCreatorSearch = value => {\n        if (value) {\n            this.props.CommonStore.getAllCreators(value)\n        } else {\n            this.setState({ data: [] });\n        }\n    };\n\n    handleCreatorChange = value => {\n        this.setState({ value });\n        this.props.SceneManagerStore.changeTableRequestData('creatorId',value);\n    };\n    handleSubmit = () => {\n        this.props.SceneManagerStore.initData(1);\n    }\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n    render(){\n        const {allCreators} = this.props.CommonStore\n\n        return (\n            <Form  className=\"ant-advanced-search-form p-xs pb-0\" >\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"场景ID\">\n                            <Input placeholder=\"请输入场景ID\" allowClear={true} onChange={this.inputChange.bind(this,'id')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"场景名称\">\n                            <Input placeholder=\"请输入场景名称\" allowClear={true} onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"创建人\">\n                            <Select\n                                showSearch\n                                value={this.state.value}\n                                placeholder=\"请输入真名搜索(非花名)\"\n                                style={this.props.style}\n                                defaultActiveFirstOption={false}\n                                showArrow={false}  allowClear={true}\n                                filterOption={false}\n                                onSearch={this.handleCreatorSearch}\n                                onChange={this.handleCreatorChange}\n                                notFoundContent={null}\n                            >\n                                {allCreators.map(d => <Option key={d.userId}>{d.realName}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"执行方式\">\n                            <Select   placeholder=\"请选择执行方式\"  allowClear={true} onChange={this.optionChange.bind(this,'scheduleType')}>\n                                <Option value=\"0\">顺序执行</Option>\n                                <Option value=\"1\">并行执行</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={3}>\n                        <Form.Item>\n                            <Button type=\"primary\"  onClick={this.handleSubmit}>\n                                <Icon type=\"search\" /> 搜索\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                    <Col span={3} >\n                        <Form.Item>\n                            <Button type=\"primary\"  onClick={()=>{window.open(\"/insert_scene\")}}><Icon type=\"plus\" /> 添加场景</Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(SearchForm)\n\n","import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Row, Pagination,notification,Icon} from 'antd';\nimport {columns} from './config';\nimport SearchForm from './SearchForm';\n\n@inject('SceneManagerStore','CommonStore','TestCaseManagerStore')\n@observer\nclass SceneManagerList extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '场景管理'},\n        ]);\n        this.props.SceneManagerStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n        }\n    }\n    onChangePage = page => {\n        this.props.SceneManagerStore.initData(page);\n    };\n    exeCase =(record) => {\n        notification.open({\n            message: '执行提醒',\n            description:\n                '场景已经开始执行，请前往执行记录中查看用例执行情况；',\n            icon: <Icon type=\"smile\" style={{ color: '#108ee9' }} />,\n        });\n        this.props.TestCaseManagerStore.exeCase(record,'scene')\n    }\n    render(){\n        const {dataSource,pageNo,pageSize,totalCount} = this.props.SceneManagerStore\n        const mydataSource = dataSource.toJS()\n        return(\n            <div className=\"container-bg\">\n                <Row>\n                    <SearchForm/>\n                    <Table\n                        bordered\n                        columns={columns(this)} pagination={false}\n                        dataSource={mydataSource}  />\n                    <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default SceneManagerList;"],"sourceRoot":""}