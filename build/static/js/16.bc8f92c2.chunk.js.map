{"version":3,"sources":["container/TestCaseManager/ExeCaseDrawer.js","container/TestCaseManager/Insert/index.js"],"names":["TextArea","ExeCaseDrawer","inject","observer","props","onClose","TestCaseManagerStore","hideCaseDrawer","state","visible","this","exeDetailData","drawerVisible","caseData","toJS","caseExeRecords","statusStr","status","color","resultStatus","testCase","succeed","console","log","style","title","width","placement","gutter","span","name","operatorName","env","exeTimeStr","testApi","message","type","backgroundColor","border","rows","value","resultJsonFormat","paramScript","contextParamScript","Component","create","config","top","FormItem","Item","Option","InsertIndex","getTags","tags","ApiManagerStore","insertTags","insert","e","preventDefault","form","validateFieldsAndScroll","err","values","detailData","compressParams","setState","jsonFormat","timerExe","result","a","ExeRecordStore","getDetailData","data","timerDate","setInterval","tick","testCaseExe","caseId","getUrlParam","window","location","search","warn","params","dubboGroup","exeCase","code","showCaseDrawer","isCompressDisplay","isJsonFormatDisplay","leg","setBreadcrumb","getApiDetailData","n","target","changeDetailData","v","toString","clearInterval","handleClearTimeout","copy","success","getFieldDecorator","insertButtonStatus","updateButtonStatus","caseDetailData","className","layout","onSubmit","formItemLayout","label","appName","moduleName","initialValue","apiClassName","rules","required","disabled","apiMethodName","map","tag","index","isLongTag","length","tagElem","key","id","slice","pllaceholder","onChange","inputChange","bind","priority","optionChange","desc","float","src","eval","argsJsonFormat","enableClipboard","handleCopy","theme","display","marginBottom","onClick","placeholder","validScript","href","htmlType","open","allowClear"],"mappings":"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","file":"static/js/16.bc8f92c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Row,Col,Form, Drawer, Tag ,Alert,Input} from 'antd';\nimport {toJS} from \"mobx/lib/mobx\";\nconst { TextArea } = Input;\n\n@inject('TestCaseManagerStore')\n@observer\nclass ExeCaseDrawer extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            visible:false\n        }\n    }\n\n    onClose = () => {\n        this.props.TestCaseManagerStore.hideCaseDrawer()\n    };\n\n    render(){\n        const {exeDetailData,drawerVisible} = this.props\n        let caseData = toJS(exeDetailData.caseExeRecords)\n        let statusStr = \"\"\n        if(exeDetailData.status == 0){\n            statusStr = <Tag color=\"#f50\">待执行</Tag>\n        }else if(exeDetailData.status == 1){\n            statusStr = <Tag color=\"#2db7f5\">执行中</Tag>\n        }else if(exeDetailData.status == 2){\n            statusStr = <Tag color=\"#87d068\">已完成</Tag>\n        }\n        let resultStatus = \"\"\n        if(typeof caseData != \"undefined\"){\n            if(caseData[0].testCase.succeed == true){\n                resultStatus = <Tag color=\"#87d068\">执行成功</Tag>\n            }else{\n                resultStatus = <Tag color=\"#f50\">执行失败</Tag>\n            }\n        }\n\n        console.log(typeof caseData == 'undefined' ? \"\" : caseData[0].testCase)\n        const style = {\n            'marginBottom':'8px'\n        }\n        return (\n            <Drawer\n                title=\"执行结果\" width={720}\n                placement=\"right\"\n                onClose={this.onClose}\n                visible={drawerVisible}\n            >\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        {typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.name}\n                    </Col>\n                    <Col span={6}>\n                        任务状态：{statusStr}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        操作人：{exeDetailData.operatorName}\n                    </Col>\n                    <Col span={10}>\n                        执行环境：{exeDetailData.env}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        执行时间：{exeDetailData.exeTimeStr}\n                    </Col>\n                    <Col span={8}>\n                        执行结果：{resultStatus}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        接口名： {typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.testApi.name}\n                    </Col>\n                </Row>\n                <Alert message=\"校验结果\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <pre>\n                    {typeof caseData == 'undefined' ? \"\" : caseData[0].message == null ? \"暂无结果\":caseData[0].message}\n                </pre>\n                <Alert message=\"返回结果\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <TextArea rows={5} style={{'width':'670px','marginBottom':'6px'}} value={typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.testApi.resultJsonFormat}/>\n                <Alert message=\"请求入参\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <TextArea rows={5} style={{'width':'670px','marginBottom':'6px'}} value={typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.paramScript}/>\n                <Alert message=\"dubbo contextParams\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <TextArea rows={3} style={{'width':'670px','marginBottom':'6px'}} value={typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.contextParamScript}/>\n            </Drawer>\n        )\n    }\n}\n\nexport default Form.create()(ExeCaseDrawer)\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport ReactJson from 'react-json-view'\nimport { Tag, Button,Alert, Select, Row,Icon, Form, Input,Tooltip,message } from 'antd';\nimport {getUrlParam} from '../../../utils/common'\nimport ExeCaseDrawer from '../ExeCaseDrawer'\n\nmessage.config({\n    top: 200\n});\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\n@inject('TestCaseManagerStore','ApiManagerStore','ExeRecordStore')\n@observer\nclass InsertIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '用例管理'},\n            {name: '编辑用例'},\n        ]);\n        this.props.ApiManagerStore.getApiDetailData()\n        if(getUrlParam('caseId',window.location.search) != \"\"){\n            this.props.TestCaseManagerStore.getDetailData()\n        }\n\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCompressDisplay:'',\n            isJsonFormatDisplay:'none',\n            dubboGroup:'',\n            leg: {\"userId\":\"*******\",\"ipAddr\":\"10.10.10.10\",\"appKey\":\"*******\",\"openId\":\"******\",\"unionId\":\"********\",\"deviceId\":\"*******\",\"appv\":\"\",\"os\":\"\"}\n        }\n    }\n    /**\n     * 获取子组件SingleTag中用户输入的tag标签\n     */\n    getTags = (tags) => {\n        debugger\n        this.props.ApiManagerStore.insertTags(tags)\n    };\n    /**\n     * 输入框和单选按钮产生的change事件\n     * @param n\n     * @param e\n     */\n    inputChange(n,e) {\n        let obj={};\n        obj[n]=e.target.value;\n        this.props.TestCaseManagerStore.changeDetailData(n,e.target.value);\n    }\n    optionChange(n,v,Option) {\n        this.props.TestCaseManagerStore.changeDetailData(n,v.toString() || '');\n    }\n\n    /**\n     * 保存用例\n     */\n    insert = (e) => {\n\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.TestCaseManagerStore.insert(this.props.ApiManagerStore.tags,this.props.ApiManagerStore.detailData,true)\n            }\n        });\n    }\n    /**\n     * 压缩参数\n     */\n    compressParams = () => {\n        this.setState({\n            'isCompressDisplay':'',\n            'isJsonFormatDisplay':'none',\n        })\n    }\n    /**\n     * json格式化\n     */\n    jsonFormat = () => {\n        this.setState({\n            'isCompressDisplay':'none',\n            'isJsonFormatDisplay':'',\n        })\n    }\n    timerExe = async(result) => {\n        let data = await this.props.ExeRecordStore.getDetailData(result.data)\n        this.timerDate = setInterval(()=> this.tick(data.status),1000);\n    }\n    handleClearTimeout(){\n        this.timerDate && clearInterval(this.timerDate);\n    }\n    componentWillUnmount(){\n        this.handleClearTimeout()\n    }\n    tick(status){\n        if(status == 2){\n            this.handleClearTimeout()\n        }\n    }\n\n    /**\n     * 只测试不保存\n     */\n    testCaseExe = async () => {\n        debugger\n        let caseId = getUrlParam('caseId',window.location.search);\n\n        if(caseId == \"\"){\n            message.warn(\"请先保存用例再执行！\")\n            return\n        }\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.TestCaseManagerStore.insert(this.props.ApiManagerStore.tags,this.props.ApiManagerStore.detailData,false)\n            }\n        });\n        let params =  {\"id\":null,\"caseIds\":[caseId],\"scheduleType\":1,\"env\":this.state.dubboGroup}\n        let result = await this.props.TestCaseManagerStore.exeCase(params,'case');\n        if(result.code == 200){\n            this.timerExe(result)\n\n            this.props.TestCaseManagerStore.showCaseDrawer()\n        }else{\n            message.warn(\"执行出现错误\")\n        }\n    }\n    handleCopy(copy){\n        message.success(\"复制成功\")\n    }\n\n    render(){\n\n        const { getFieldDecorator} = this.props.form;\n        const {detailData,tags} = this.props.ApiManagerStore\n        const {exeDetailData} = this.props.ExeRecordStore\n        const {insertButtonStatus,updateButtonStatus,caseDetailData,drawerVisible} = this.props.TestCaseManagerStore\n        return(\n            <div className=\"container-bg\" style={{'marginLeft':'15px'}}>\n                <Form  layout=\"inline\" className=\"ant-advanced-search-form p-xs pb-0\" onSubmit={this.insert}>\n                    <Alert message=\"接口信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"\">\n                            <Tag color=\"geekblue\">接口归属应用：{detailData.appName}</Tag>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\">\n                            <Tag color=\"geekblue\">接口归属模块：{detailData.moduleName}</Tag>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"接口路径\">\n                            {getFieldDecorator('apiClassName', {\n                                initialValue: detailData.apiClassName,\n                                rules: [{ required: false, message: '请填写接口路径!' }],\n                            })(\n                                <Input disabled style={{ width: 823 }} />\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"方法名\">\n                            {getFieldDecorator('apiMethodName', {\n                                initialValue: detailData.apiMethodName,\n                                rules: [{ required: false, message: '请填写方法名!' }],\n                            })(\n                                <Input disabled style={{ width: 375 }}/>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"接口名\">\n                            <Input disabled style={{ width: 389 }} value={detailData.name}/>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"接口标签\">\n                            {tags.map((tag, index) => {\n                                const isLongTag = tag.length > 20;\n                                const tagElem = (\n                                    <Tag key={tag.id} >\n                                        {isLongTag ? `${tag.value.slice(0, 20)}...` : tag.value}\n                                    </Tag>\n                                );\n                                return isLongTag ? (\n                                    <Tooltip title={tag.value} key={tag.id}>\n                                        {tagElem}\n                                    </Tooltip>\n                                ) : (\n                                    tagElem\n                                );\n                            })}\n                        </FormItem>\n                    </Row>\n                    <Alert message=\"用例信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"用例名\">\n                            {getFieldDecorator('name', {\n                                initialValue: caseDetailData.name,\n                                rules: [{ required: true, message: '请填写用例名!' }],\n                            })(\n                                <Input style={{ width: 365 }} pllaceholder=\"请填写用例名\" onChange={this.inputChange.bind(this,'name')}/>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"优先级\">\n                            <span>\n                                 {getFieldDecorator('priority', {\n                                     initialValue: caseDetailData.priority,\n                                     rules: [{ required: true, message: '请选择优先级!' }],\n                                 })(\n                                     <Select style={{ width: 120 }} onChange={this.optionChange.bind(this,'priority')}>\n                                         <Option value=\"1\">1</Option>\n                                         <Option value=\"2\">2</Option>\n                                         <Option value=\"3\">3</Option>\n                                         <Option value=\"4\">4</Option>\n                                     </Select>\n                                 )}\n                                &nbsp;&nbsp;&nbsp;\n                                <Tag color=\"magenta\"> 1为最高，4为最低 </Tag>\n                            </span>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"描述\">\n                            {getFieldDecorator('desc', {\n                                initialValue: caseDetailData.desc,\n                                rules: [{ required: false, message: '请填写用例描述!' }],\n                            })(\n                                <TextArea rows={3} style={{ width: 852 }} onChange={this.inputChange.bind(this,'desc')}/>\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Alert message=\"接口参数信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            <b>接口入参：</b>\n                            <ReactJson src={eval(detailData.argsJsonFormat)}  enableClipboard={this.handleCopy} name={null}  theme=\"google\" style={{border:'1px solid #ccc','height':'180px','maxHeight':'180px','overflow-y':'auto' }}/>\n                            <b>接口出参：</b>\n                            <ReactJson src={eval(detailData.resultJsonFormat)}  enableClipboard={this.handleCopy} name={null} theme=\"google\" style={{border:'1px solid #ccc','height':'180px','maxHeight':'180px','overflow-y':'auto' }}/>\n                        </div>\n                        <div style={{float:'right',width:'51%','marginTop':'19px'}}>\n                            {getFieldDecorator('paramScript', {\n                                initialValue: caseDetailData.paramScript,\n                                rules: [{ required: false, message: '请填写接口参数信息!' }],\n                            })(\n                                <TextArea rows={16} style={{'width':'1300px',display:this.state.isCompressDisplay }} onChange={this.inputChange.bind(this,'paramScript')}/>\n                            )}\n\n                            <ReactJson src={eval(caseDetailData.paramScript)}  enableClipboard={false}  name={null} style={{border:'1px solid #ccc','height':'343px','marginBottom':'5px','maxHeight':'343px','overflow-y':'auto',display:this.state.isJsonFormatDisplay  }}/>\n\n                            <Button type=\"primary\" style={{marginBottom:'8px'}} onClick={this.compressParams}>压缩</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button type=\"primary\" style={{marginBottom:'8px'}} onClick={this.jsonFormat}>格式化</Button>\n                        </div>\n                    </Row>\n                    <Alert message=\"dubbo contextParams\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px','marginTop':'6px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            {\n                                getUrlParam('caseId',window.location.search) != \"\" ?\n                                    <TextArea rows={6} style={{ width: 600}} value={caseDetailData.contextParamScript} placeholder='如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context,如：{\"userId\":\"5c0e5e0c881f449b9fe50923ea8f6183\"}，也可以参考右侧格式' onChange={this.inputChange.bind(this,'contextParamScript')}/> : <TextArea rows={6} style={{ width: 600}}  placeholder='如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context,如：{\"userId\":\"5c0e5e0c881f449b9fe50923ea8f6183\"}，也可以参考右侧格式' onChange={this.inputChange.bind(this,'contextParamScript')}/>\n                            }\n                        </div>\n                        <div style={{float:'right',width:'50%'}}>\n                            如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context，如：\n                            <ReactJson src={this.state.leg} name={null}  enableClipboard={this.handleCopy} style={{border:'1px solid #ccc','height':'113px','marginBottom':'5px','maxHeight':'113px','overflow-y':'auto'  }}/>\n                        </div>\n                    </Row>\n                    <Alert message=\"结果校验规则（如：assert self.result.data != null:'结果data不能为空'）\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            {\n                                getUrlParam('caseId',window.location.search) != \"\" ?\n                                    <TextArea rows={6} style={{ width: 600 }} value={caseDetailData.validScript} placeholder=\"多个assert的规则需要换行写\" onChange={this.inputChange.bind(this,'validScript')}/>\n                                    :\n                                    <TextArea rows={6} style={{ width: 600 }} placeholder=\"多个assert的规则需要换行写\" onChange={this.inputChange.bind(this,'validScript')}/>\n                            }\n                        </div>\n                        <div style={{float:'right',width:'50%'}}>\n                            示例一：校验后返回布尔值作为校验结果(不推荐)return self.result.data != null<br/>\n                            示例二：使用强断言校验结果(推荐)assert self.result.data != null <br/>\n                            示例三：使用断言校验结果(推荐)assert self.result.data != null:'data不能为空'<br/>\n                            示例四：多个判断<br/>\n                            assert self.result.data != null:'结果data不能为空' <br/>\n                            assert self.result.data.itemId !=null:'结果itemId不能为空'  &nbsp;&nbsp;<a href=\"http://k.yangtuojia.com/pages/viewpage.action?pageId=18827049\" target=\"_blank\" ><Icon type=\"question-circle\" /> 更多写法帮助</a><br/>\n                        </div>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:insertButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}}>添加用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}}>修改用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}} onClick={()=>{window.open(\"/edit_testcase?type=copy&apiId=\" + getUrlParam('apiId',window.location.search) + \"&caseId=\" + getUrlParam('caseId',window.location.search))}}>复制用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" style={{marginBottom:'8px'}} onClick={this.testCaseExe}>保存并执行</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Input style={{ width: 280 }} placeholder=\"请输入测试用的dubbo分组\" allowClear={true}  onChange={e => this.setState({ dubboGroup: e.target.value })}/>\n                        </FormItem>\n                    </Row>\n                </Form>\n                <ExeCaseDrawer exeDetailData={exeDetailData} drawerVisible={drawerVisible}></ExeCaseDrawer>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(InsertIndex)"],"sourceRoot":""}