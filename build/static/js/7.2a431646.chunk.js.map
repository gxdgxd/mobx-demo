{"version":3,"sources":["container/SceneManager/config.js","container/TestCaseManager/SearchForm.js","container/SceneManager/InsertCaseModal.js","container/SceneManager/DragableBodyRow.js","container/SceneManager/Update/index.js"],"names":["columns","context","title","dataIndex","key","render","row","name","width","record","href","id","target","onConfirm","exeCase","className","insertCaseColumns","text","length","substr","str","editTimeStr","creatorName","validScript","paramScript","contextParamScript","desc","apiId","testApi","apiClassName","apiMethodName","content","color","updateHref","apiHref","deleteSceneCase","caseColumns","moduleName","FormItem","Item","Option","SearchForm","inject","observer","props","handleSearch","TestCaseManagerStore","initData","handleCreatorSearch","value","CommonStore","getAllCreators","setState","data","handleCreatorChange","changeTableRequestData","formItemLayout","labelCol","span","wrapperCol","state","undefined","this","getAllTags","n","e","v","allTags","allCreators","gutter","label","placeholder","allowClear","onChange","inputChange","bind","optionChange","map","item","showSearch","style","defaultActiveFirstOption","showArrow","filterOption","onSearch","notFoundContent","d","userId","realName","type","onClick","Component","create","InsertCaseModal","onChangePage","page","console","log","selectedRowKeys","selectedRows","message","warn","SceneManagerStore","insertCase","hideInsertCaseModal","dataSource","pageNo","pageSize","totalCount","insertCaseModalVisible","mydataSource","toJS","rowSelection","destroyOnClose","visible","onOk","okModal","onCancel","hideModal","okText","cancelText","bordered","pagination","size","current","total","dragingIndex","BodyRow","isOver","connectDragSource","connectDropTarget","restProps","moveRow","cursor","index","React","rowSource","beginDrag","DragableBodyRow","DropTarget","drop","monitor","dragIndex","getItem","hoverIndex","connect","dropTarget","DragSource","dragSource","UpdateIndex","components","body","caseDataSource","dragRow","newData","update","$splice","orderCase","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","updateScene","setBreadcrumb","getDetailData","changeDetailData","toString","showInsertCaseModal","caseId","detailData","getFieldDecorator","marginLeft","onSubmit","initialValue","rules","required","env","scheduleType","updateCaseDataSource","testCaseSchedules","backend","HTML5Backend","onRow","htmlType"],"mappings":"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","file":"static/js/7.2a431646.chunk.js","sourcesContent":["import React  from 'react';\nimport { Popover,Popconfirm} from 'antd';\nimport common from \"../../style/common.css\";\n\nexport const columns = (context) => [\n    {\n        title: '场景ID',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: '执行方式',\n        dataIndex: 'scheduleType',\n        key: 'scheduleType',\n        render: (row) => {\n            var name = ''\n            if(row == 0){\n                name = \"顺序执行\"\n            }else if(row == 1){\n                name = \"并行执行\"\n            }else if(row == 2){\n                name = \"自定义\"\n            }\n            return (\n                <span>{name}</span>\n            )\n        }\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n    },\n\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n    },\n    {\n        title: '操作',\n        width: '13%',\n        key: 'operation',\n        render:(row,record) => {\n            let href = \"/update_scene?sceneId=\" + record.id\n\n            return (\n                <div>\n                    <span>\n                        <a href={href} target=\"_blank\">修改场景</a>&nbsp;\n                        <Popconfirm title=\"确定执行此场景吗？\" onConfirm={() => context.exeCase(record)} >\n                            <a href=\"#\"  className=\"vLine\"> 执行场景</a>\n                        </Popconfirm>\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const insertCaseColumns = (context) => [\n    {\n        title: '用例ID',\n        dataIndex: 'id',\n        key: 'id',\n        width:'7%',\n    },\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'15%'\n    },\n    {\n        title: '操作',\n        width: '25%',\n        key: 'operation',\n        render:(row,record) => {\n            let updateHref = '/edit_testcase?apiId=' + record.apiId + \"&caseId=\" + record.id\n            let apiHref = '/api_manager?apiId=' + record.apiId\n            return (\n                <span>\n                    <Popconfirm title=\"确定从此场景中移除此用例吗？\" onConfirm={() => context.deleteSceneCase(record.id)} >\n                      <a href=\"#\">移除用例</a>&nbsp;\n                    </Popconfirm>\n                    <a href={updateHref} target=\"_blank\"  className=\"vLine\"> 修改用例</a>&nbsp;\n                    <a href={apiHref} target=\"_blank\"  className=\"vLine\"> 查看接口</a>\n                </span>\n            )\n        }\n    }\n];\n\n\nexport const caseColumns = (context) => [\n    {\n        title: '用例ID',\n        dataIndex: 'id',\n        key: 'id',\n        width:'7%',\n    },\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n                <span>接口名：{record.moduleName}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%'\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width:'20%'\n    }\n];\n\n\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport {  Button, Select,Icon, Row, Col, Form, Input } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n@inject('TestCaseManagerStore','CommonStore')\n@observer\nclass SearchForm extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            data: [],\n            value: undefined,\n        }\n    }\n    componentDidMount() {\n        this.props.CommonStore.getAllTags();\n    }\n\n    inputChange(n,e) {\n        this.props.TestCaseManagerStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.TestCaseManagerStore.changeTableRequestData(n,v || '');\n    }\n    handleSearch = () => {\n        this.props.TestCaseManagerStore.initData(1);\n    }\n    handleCreatorSearch = value => {\n        if (value) {\n            this.props.CommonStore.getAllCreators(value)\n        } else {\n            this.setState({ data: [] });\n        }\n    };\n\n    handleCreatorChange = value => {\n        this.setState({ value });\n        this.props.TestCaseManagerStore.changeTableRequestData('creatorId',value);\n    };\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n\n    render(){\n        const {allTags,allCreators} = this.props.CommonStore\n\n        return (\n            <Form className=\"ant-advanced-search-form p-xs pb-0\" >\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"接口ID\">\n                            <Input placeholder=\"请输入接口ID\" allowClear={true} onChange={this.inputChange.bind(this,'apiId')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"用例名\">\n                            <Input placeholder=\"请输入用例名\"  allowClear={true} onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"标签\">\n                            <Select name=\"tagId\" allowClear={true} placeholder=\"请选择标签搜索\"\n                                    onChange={this.optionChange.bind(this,'tagId')}>\n                                {allTags.map(item => <Option key={item.id} value={item.id}>{item.value}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"创建人\">\n                            <Select\n                                showSearch  allowClear={true}\n                                value={this.state.value}\n                                placeholder=\"请输入真名搜索(非花名)\"\n                                style={this.props.style}\n                                defaultActiveFirstOption={false}\n                                showArrow={false}\n                                filterOption={false}\n                                onSearch={this.handleCreatorSearch}\n                                onChange={this.handleCreatorChange}\n                                notFoundContent={null}\n                            >\n                                {allCreators.map(d => <Option key={d.userId}>{d.realName}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"优先级\">\n                            <Select  placeholder=\"请选择优先级搜索\"  allowClear={true} onChange={this.optionChange.bind(this,'priority')}>\n                                <Option value=\"1\">1</Option>\n                                <Option value=\"2\">2</Option>\n                                <Option value=\"3\">3</Option>\n                                <Option value=\"4\">4</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={3} style={{'marginTop':'3px'}}>\n                        <Button type=\"primary\"  onClick={this.handleSearch}>\n                            <Icon type=\"search\" /> 搜索\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(SearchForm)\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Form, Pagination, Modal } from 'antd';\nimport SearchForm from '../TestCaseManager/SearchForm';\nimport {caseColumns} from \"./config\";\nimport common from \"../../style/common.css\";\nimport {message} from \"antd/lib/index\";\nconst FormItem = Form.Item;\n\n@inject('SceneManagerStore','TestCaseManagerStore')\n@observer\nclass InsertCaseModal extends Component{\n    componentDidMount() {\n        this.props.TestCaseManagerStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state={\n            selectedRowKeys:[],\n            selectedRows:[]\n        }\n    }\n\n    /**\n     * 点击保存时\n     */\n    okModal(){\n        if(this.state.selectedRowKeys.length <= 0){\n            message.warn(\"请先勾选需要追加的用例\")\n        }else{\n            console.log(this.state.selectedRowKeys)\n            console.log(this.state.selectedRows)\n            this.props.SceneManagerStore.insertCase(this.state.selectedRows);\n        }\n    }\n\n    hideModal(){\n        this.props.SceneManagerStore.hideInsertCaseModal('insert');\n    }\n    onChangePage = page => {\n        console.log(page);\n        this.props.TestCaseManagerStore.initData(page);\n    };\n\n    render(){\n        const {dataSource,pageNo,pageSize,totalCount} = this.props.TestCaseManagerStore\n        const { insertCaseModalVisible} = this.props\n        const mydataSource = dataSource.toJS()\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n                this.setState({\n                    selectedRowKeys: selectedRowKeys,\n                    selectedRows: selectedRows\n                });\n            }\n        };\n        return (\n            <Modal\n                destroyOnClose\n                title=\"追加用例\"\n                width=\"1100px\"\n                visible={insertCaseModalVisible}\n                onOk={this.okModal.bind(this)}\n                onCancel={this.hideModal.bind(this)}\n                okText=\"添加\"\n                cancelText=\"取消\"\n                className=\"model\" style={{'marginTop':'28px'}}>\n                <SearchForm />\n                <Table rowSelection={rowSelection}\n                    bordered\n                    columns={caseColumns(this)} pagination={false}\n                    dataSource={mydataSource}  size=\"middle\"/>\n                <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n            </Modal>\n        )\n    }\n}\n\nexport default Form.create()(InsertCaseModal)\n","import { DragSource, DropTarget } from 'react-dnd';\nimport React from 'react';\n\n\n/**\n * 拖拽表格顺序\n * @type {number}\n */\nlet dragingIndex = -1;\nclass BodyRow extends React.Component {\n    render() {\n        const { isOver, connectDragSource, connectDropTarget, moveRow, ...restProps } = this.props;\n        const style = { ...restProps.style, cursor: 'move' };\n\n        let { className } = restProps;\n        if (isOver) {\n            if (restProps.index > dragingIndex) {\n                className += ' drop-over-downward';\n            }\n            if (restProps.index < dragingIndex) {\n                className += ' drop-over-upward';\n            }\n        }\n\n        return connectDragSource(\n            connectDropTarget(<tr {...restProps} className={className} style={style} />),\n        );\n    }\n}\n\nconst rowSource = {\n    beginDrag(props) {\n        dragingIndex = props.index;\n        return {\n            index: props.index,\n        };\n    },\n};\n\nconst rowTarget = {\n    drop(props, monitor) {\n        const dragIndex = monitor.getItem().index;\n        const hoverIndex = props.index;\n\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n            return;\n        }\n\n        // Time to actually perform the action\n        props.moveRow(dragIndex, hoverIndex);\n\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        monitor.getItem().index = hoverIndex;\n    },\n};\n\nexport const DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n}))(\n    DragSource('row', rowSource, connect => ({\n        connectDragSource: connect.dragSource(),\n    }))(BodyRow),\n);","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table, Button, Tag, Select,Icon, Row, Col, Form, Input } from 'antd';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\nimport InsertCaseModal from '../InsertCaseModal'\nimport {insertCaseColumns} from '../config';\nimport {DragableBodyRow} from '../DragableBodyRow'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n\n@inject('SceneManagerStore','TestCaseManagerStore')\n@observer\nclass UpdateIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '场景管理'},\n            {name: '修改场景'}\n        ]);\n        this.props.SceneManagerStore.getDetailData()\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            data:[]\n        }\n    }\n    components = {\n        body: {\n            row: DragableBodyRow,\n        },\n    };\n    /**\n     * 上下移动数据\n     * @param dragIndex\n     * @param hoverIndex\n     */\n    moveRow = (dragIndex, hoverIndex) => {\n        debugger\n        const data = this.props.SceneManagerStore.caseDataSource.toJS()\n        const dragRow = data[dragIndex];\n        const newData =  update(data,  {$splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]]});\n        this.props.SceneManagerStore.orderCase(newData)\n    };\n    inputChange(n,e) {\n        this.props.SceneManagerStore.changeDetailData(n,e.target.value);\n    }\n    optionChange(n,v,Option) {\n        this.props.SceneManagerStore.changeDetailData(n,v.toString() || '');\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.SceneManagerStore.updateScene();\n            }\n        });\n    }\n\n    showInsertCaseModal(){\n        this.props.SceneManagerStore.showInsertCaseModal()\n    }\n    deleteSceneCase(caseId){\n        this.props.SceneManagerStore.deleteSceneCase(caseId)\n    }\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n    exeCase = (record) => {\n        this.props.TestCaseManagerStore.exeCase(record,'scene')\n    }\n    render(){\n        const {insertCaseModalVisible,caseDataSource,detailData} = this.props.SceneManagerStore\n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div style={{width:'96%',marginLeft:'25px'}}>\n                <Form  className=\"ant-advanced-search-form p-xs pb-0\"  onSubmit={this.handleSubmit}>\n                    <Row gutter={48}>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"场景名\">\n                                {getFieldDecorator('name', {\n                                    initialValue: detailData.name,\n                                    rules: [{ required: true, message: '请输入场景名!' }],\n                                })(\n                                    <Input placeholder=\"请输入场景名\"  style={{ width: 200 }} onChange={this.inputChange.bind(this,'name')}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"环境\">\n                                {getFieldDecorator('env', {\n                                    initialValue: detailData.env,\n                                    rules: [{ required: true, message: '请输入执行环境!' }],\n                                })(\n                                    <Input placeholder=\"请输入执行环境\"  style={{ width: 200 }}  onChange={this.inputChange.bind(this,'env')}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={8}>\n                            <FormItem {...this.formItemLayout} label=\"执行方式\">\n                                {getFieldDecorator('scheduleType', {\n                                    initialValue: detailData.scheduleType == \"0\" ? \"顺序执行\":\"并行执行\",\n                                    rules: [{ required: true, message: '请选择执行方式!' }],\n                                })(\n                                    <Select  style={{ width: 130 }} onChange={this.optionChange.bind(this,'scheduleType')}>\n                                        <Option value=\"0\">顺序执行</Option>\n                                        <Option value=\"1\">并行执行</Option>\n                                    </Select>\n                                )}\n                               &nbsp; &nbsp;\n                                <Button type=\"primary\" onClick={this.showInsertCaseModal.bind(this)} >追加用例</Button>\n                                <InsertCaseModal updateCaseDataSource={detailData.testCaseSchedules} insertCaseModalVisible={insertCaseModalVisible}></InsertCaseModal>\n                            </FormItem>\n                        </Col>\n                    </Row>\n\n                    <Row gutter={48}>\n                        <Tag color=\"purple\" style={{'marginBottom':'8px'}}>  <Icon type=\"smile\" /> 上下拖拽可以移动表格中用例顺序哦～  </Tag>\n                        <DndProvider backend={HTML5Backend}>\n                            <Table\n                                bordered\n                                columns={insertCaseColumns(this)}\n                                dataSource={caseDataSource.toJS()} components={this.components}\n                                onRow={(record, index) => ({\n                                    index,\n                                    moveRow: this.moveRow,\n                                })} />\n                        </DndProvider>\n                    </Row>\n                    <Row style={{'marginTop':'6px'}}>\n                        <Col span={7}>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    保存此场景数据\n                                </Button> &nbsp; &nbsp; &nbsp;\n                                <Button type=\"primary\" onClick={this.exeCase}  onClick={() => this.exeCase(detailData)} >\n                                    执行场景\n                                </Button>  &nbsp; &nbsp; &nbsp;\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(UpdateIndex)\n"],"sourceRoot":""}