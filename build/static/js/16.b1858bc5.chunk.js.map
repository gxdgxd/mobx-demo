{"version":3,"sources":["container/ExeRecord/DetailModal.js","container/ExeRecord/index.js","container/ExeRecord/config.js"],"names":["DetailModal","inject","observer","props","state","modalVisible","this","className","destroyOnClose","title","width","visible","okText","cancelText","Component","RangePicker","ExeRecordIndex","json_str","setBreadcrumb","name","ExeRecordStore","initData","n","e","dates","dateStrings","console","log","record","getDetailData","context","dataSource","mydataSource","toJS","onSubmit","handleSubmit","gutter","span","ranges","Today","moment","startOf","endOf","onChange","placeholder","style","inputChange","bind","type","htmlType","bordered","columns","dataIndex","key","render","row","id","onClick","showModal"],"mappings":"oaAqCeA,EA9BdC,YAAO,iB,GACPC,Y,cAGG,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAO,GAFE,E,sEAMT,IACEC,EAAgBC,KAAKH,MAArBE,aACP,OACI,yBAAKE,UAAU,gBACX,uBACIC,gBAAc,EACdC,MAAM,2BACNC,MAAM,QACNC,QAASN,EACTO,OAAO,eACPC,WAAW,eACXN,UAAU,SAPd,Y,GAZUO,e,MCAlBC,E,IAAAA,YAIFC,EAFLf,YAAO,iB,GACPC,Y,cAQG,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAO,CACRa,SAAS,IAHC,E,iFALdX,KAAKH,MAAMe,cAAc,CACrB,CAACC,KAAM,8BAEXb,KAAKH,MAAMiB,eAAeC,SAAS,O,iDAQ3BC,EAAEC,M,+BAELC,EAAOC,GACZC,QAAQC,IAAI,SAAUH,EAAM,GAAI,SAAUA,EAAM,IAChDE,QAAQC,IAAI,SAAUF,EAAY,GAAI,SAAUA,EAAY,M,gCAEtDG,GACNtB,KAAKH,MAAMiB,eAAeS,cAAcD,K,+BAEnC,IChCWE,EDgCZ,EAC8BxB,KAAKH,MAAMiB,eAAtCW,EADH,EACGA,WAAW1B,EADd,EACcA,aACZ2B,EAAeD,EAAWE,OAChC,OACI,yBAAK1B,UAAU,gBACX,uBAAOA,UAAU,qCAAsC2B,SAAU5B,KAAK6B,cAClE,uBAAKC,OAAQ,IACT,uBAAKC,KAAM,GAAX,qBAEQ,kBAACtB,EAAD,CACIuB,OAAQ,CACJC,MAAO,CAACC,MAAUA,OAClB,aAAc,CAACA,MAASC,QAAQ,SAAUD,MAASE,MAAM,WAE7DC,SAAUrC,KAAKqC,YAG3B,uBAAKN,KAAM,GAAX,uBACS,uBAAOO,YAAY,mCAAUC,MAAO,CAAC,MAAQ,SAAUF,SAAUrC,KAAKwC,YAAYC,KAAKzC,KAAK,kBAErG,uBAAK+B,KAAM,GAAX,iCACS,uBAAOO,YAAY,6CAAUC,MAAO,CAAC,MAAQ,SAASF,SAAUrC,KAAKwC,YAAYC,KAAKzC,KAAK,UAEpG,uBAAK+B,KAAM,GACP,uBAAQW,KAAK,UAAUC,SAAS,UAC5B,uBAAMD,KAAK,WADf,oBAMZ,uBAAKH,MAAO,CAAC,UAAY,QACrB,uBACIK,UAAQ,EACRC,SCjEArB,EDiEiBxB,KCjEL,CAChC,CACIG,MAAO,KACP2C,UAAW,KACXC,IAAK,MAET,CACI5C,MAAO,2BACP2C,UAAW,OACXC,IAAK,QAET,CACI5C,MAAO,qBACP2C,UAAW,gBACXC,IAAK,iBAET,CACI5C,MAAO,2BACP2C,UAAW,gBACXC,IAAK,iBAET,CACI5C,MAAO,eACP2C,UAAW,MACXC,IAAK,OAET,CACI5C,MAAO,2BACP2C,UAAW,MACXC,IAAK,OAET,CACI5C,MAAO,qBACP2C,UAAW,MACXC,IAAK,OAET,CACI5C,MAAO,qBACP2C,UAAW,MACXC,IAAK,OAET,CACI5C,MAAO,qBACP2C,UAAW,cACXC,IAAK,eAET,CACI5C,MAAO,eACPC,MAAO,MACP2C,IAAK,YACLC,OAAO,SAACC,EAAI3B,GAER,OAD+BA,EAAO4B,GAElC,6BACI,8BACI,uBAAGC,QAAS3B,EAAQ4B,UAAUX,KAAKjB,EAAQF,IAA3C,gBADJ,cDYIG,WAAYC,IAChB,kBAAC,EAAD,CAAa3B,aAAcA,U,GAzDlBS,e,MAiEdE","file":"static/js/16.b1858bc5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Input,Tree,Form,Row, Col,Button,Modal,DatePicker} from 'antd';\nimport {columns} from \"./config\";\n\n\n@inject('ExeRecordStore')\n@observer\nclass DetailModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.state= {\n        }\n    }\n\n    render(){\n        const {modalVisible} = this.props\n        return(\n            <div className=\"container-bg\">\n                <Modal\n                    destroyOnClose\n                    title=\"执行详情\"\n                    width=\"800px\"\n                    visible={modalVisible}\n                    okText=\"保存\"\n                    cancelText=\"取消\"\n                    className=\"model\">\n                    sss\n\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default DetailModal;","import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Input,Tree,Form,Row, Col,Button,Icon,DatePicker} from 'antd';\nimport moment from 'moment';\nimport {columns} from \"./config\";\nimport DetailModal from \"./DetailModal\";\n\n\nconst { RangePicker } = DatePicker;\n\n@inject('ExeRecordStore')\n@observer\nclass ExeRecordIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '执行记录'},\n        ]);\n        this.props.ExeRecordStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            json_str:{}\n        }\n    }\n    inputChange(n,e) {\n    }\n    onChange(dates, dateStrings) {\n        console.log('From: ', dates[0], ', to: ', dates[1]);\n        console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n    }\n    showModal(record){\n        this.props.ExeRecordStore.getDetailData(record)\n    }\n    render(){\n        const {dataSource,modalVisible} = this.props.ExeRecordStore\n        const mydataSource = dataSource.toJS()\n        return(\n            <div className=\"container-bg\">\n                <Form  className=\"ant-advanced-search-form p-xs pb-0\"  onSubmit={this.handleSubmit}>\n                    <Row gutter={48}>\n                        <Col span={9}>\n                            时间：\n                                <RangePicker\n                                    ranges={{\n                                        Today: [moment(), moment()],\n                                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                    }}\n                                    onChange={this.onChange}\n                                />\n                        </Col>\n                        <Col span={5}>\n                            场景ID：<Input placeholder=\"请输入场景ID\" style={{'width':'130px'}} onChange={this.inputChange.bind(this,'testSceneId')}/>\n                        </Col>\n                        <Col span={5}>\n                            执行环境：<Input placeholder=\"请输入执行环境\" style={{'width':'130px'}}onChange={this.inputChange.bind(this,'env')}/>\n                        </Col>\n                        <Col span={3}>\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                <Icon type=\"search\" /> 搜索\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n                <Row style={{'marginTop':'8px'}}>\n                    <Table\n                        bordered\n                        columns={columns(this)}\n                        dataSource={mydataSource} />\n                    <DetailModal modalVisible={modalVisible}/>\n\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default ExeRecordIndex;","import React  from 'react';\nimport { Icon,Popconfirm,Popover} from 'antd';\nimport ReactJson from 'react-json-view'\nexport const columns = (context) => [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title: '用例组',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n    },\n    {\n        title: '执行时间',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '总用例数',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '成功数',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '失败数',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n    },\n    {\n        title: '操作',\n        width: '10%',\n        key: 'operation',\n        render:(row,record) => {\n            let href = \"/api_detail?id=\" + record.id\n            return (\n                <div>\n                    <span>\n                        <a onClick={context.showModal.bind(context,record)}>详情</a> &nbsp;\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const detailColumns = (context) => [\n    {\n        title: '用例名称',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '执行结果',\n        dataIndex: 'result',\n        key: 'result',\n    },\n    {\n        title: '时间',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n    },\n    {\n        title: '环境',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '参数',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '接口返回',\n        dataIndex: 'env',\n        key: 'env',\n        // render:function(text, record){\n        //     let str = {\"itemId\":\"111067\",\"shopId\":\"$p.result.id\",\"shopEEId\":\"6dc677030efb48fcb0c5db98fef8ef99\"}\n        //     var name = record.name.length > 12 ? record.name.substr(0,12) + '...' : record.name;\n        //\n        //     let jsonStr = <ReactJson src={str} theme=\"google\" style={{border:'1px solid #ccc','maxHeight':'261px','overflow-y':'auto' }}/>\n        //     return (\n        //         <span>\n        //             <Popover content={jsonStr} >\n        //                 <font color=\"#0c8dbf\">{name}</font>\n        //             </Popover>\n        //         </span>\n        //     )\n        // }\n    }\n];\n\n\n\n\n"],"sourceRoot":""}