{"version":3,"sources":["container/TestCaseManager/ExeCaseDrawer.js","container/TestCaseManager/Insert/index.js"],"names":["TextArea","ExeCaseDrawer","inject","observer","props","onClose","TestCaseManagerStore","hideCaseDrawer","state","visible","copy","message","success","this","exeDetailData","drawerVisible","caseData","toJS","caseExeRecords","statusStr","status","color","resultStatus","succeed","console","log","testCase","style","title","width","placement","gutter","span","name","operatorName","env","exeTimeStr","testApi","type","backgroundColor","border","src","eval","sampleResult","enableClipboard","handleCopy","rows","value","param","contextParamScript","Component","create","config","top","FormItem","Item","Option","InsertIndex","getTags","tags","ApiManagerStore","insertTags","insert","e","preventDefault","form","validateFieldsAndScroll","err","values","detailData","compressParams","setState","jsonFormat","timerExe","result","a","timerDate","setInterval","tick","data","ExeRecordStore","getDetailData","handleClearTimeout","testCaseExe","caseId","getUrlParam","window","location","search","warn","params","dubboGroup","exeCase","code","showCaseDrawer","isCompressDisplay","isJsonFormatDisplay","leg","setBreadcrumb","getApiDetailData","n","target","changeDetailData","v","toString","clearInterval","getFieldDecorator","insertButtonStatus","updateButtonStatus","caseDetailData","mockJson","paramScript","JSON","parse","className","layout","onSubmit","formItemLayout","label","appName","moduleName","initialValue","apiClassName","rules","required","disabled","apiMethodName","map","tag","index","isLongTag","length","tagElem","key","id","slice","pllaceholder","onChange","inputChange","bind","priority","optionChange","desc","float","argsJsonFormat","theme","resultJsonFormat","display","marginBottom","onClick","placeholder","validScript","href","htmlType","open","allowClear"],"mappings":"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","file":"static/js/17.b8adf2ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Row,Col,Form, Drawer, Tag ,Alert,Input} from 'antd';\nimport ReactJson from 'react-json-view'\nimport {toJS} from \"mobx/lib/mobx\";\nimport {message} from \"antd/lib/index\";\nconst { TextArea } = Input;\n\n@inject('TestCaseManagerStore')\n@observer\nclass ExeCaseDrawer extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            visible:false\n        }\n    }\n\n    onClose = () => {\n        this.props.TestCaseManagerStore.hideCaseDrawer()\n    };\n    handleCopy(copy){\n        message.success(\"复制成功\")\n    }\n    render(){\n        const {exeDetailData,drawerVisible} = this.props\n        let caseData = toJS(exeDetailData.caseExeRecords)\n        let statusStr = \"\"\n        if(exeDetailData.status == 0){\n            statusStr = <Tag color=\"#f50\">待执行</Tag>\n        }else if(exeDetailData.status == 1){\n            statusStr = <Tag color=\"#2db7f5\">执行中</Tag>\n        }else if(exeDetailData.status == 2){\n            statusStr = <Tag color=\"#87d068\">已完成</Tag>\n        }\n        let resultStatus = \"\"\n        if(typeof caseData != \"undefined\"){\n            if(caseData[0].succeed == true){\n                resultStatus = <Tag color=\"#87d068\">执行成功</Tag>\n            }else if(caseData[0].succeed == false){\n                resultStatus = <Tag color=\"#f50\">执行失败</Tag>\n            }\n        }\n\n        console.log(typeof caseData == 'undefined' ? \"\" : caseData[0].testCase)\n        const style = {\n            'marginBottom':'8px'\n        }\n        return (\n            <Drawer\n                title=\"执行结果\" width={720}\n                placement=\"right\"\n                onClose={this.onClose}\n                visible={drawerVisible}\n            >\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        {typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.name}\n                    </Col>\n                    <Col span={6}>\n                        任务状态：{statusStr}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        操作人：{exeDetailData.operatorName}\n                    </Col>\n                    <Col span={10}>\n                        执行环境：{exeDetailData.env}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        执行时间：{exeDetailData.exeTimeStr}\n                    </Col>\n                    <Col span={8}>\n                        执行结果：{resultStatus}\n                    </Col>\n                </Row>\n                <Row gutter={48} style={style}>\n                    <Col span={13}>\n                        接口名： {typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.testApi.name}\n                    </Col>\n                </Row>\n                <Alert message=\"校验结果\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <pre>\n                    {typeof caseData == 'undefined' ? \"\" : caseData[0].message == null ? \"暂无结果\":caseData[0].message}\n                </pre>\n                <Alert message=\"接口实际返回结果\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <ReactJson src={typeof caseData == 'undefined' ? \"\" : eval(\"(\"+caseData[0].sampleResult+\")\")} name={null}  enableClipboard={this.handleCopy} style={{border:'1px solid #ccc','height':'153px','marginBottom':'5px','maxHeight':'153px','overflow-y':'auto'  }}/>\n\n                <Alert message=\"请求入参\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <TextArea rows={5} style={{'width':'670px','marginBottom':'6px'}} value={typeof caseData == 'undefined' ? \"\" : caseData[0].param}/>\n                <Alert message=\"dubbo contextParams\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                <TextArea rows={3} style={{'width':'670px','marginBottom':'6px'}} value={typeof caseData == 'undefined' ? \"\" : caseData[0].testCase.contextParamScript}/>\n            </Drawer>\n        )\n    }\n}\n\nexport default Form.create()(ExeCaseDrawer)\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport ReactJson from 'react-json-view'\nimport { Tag, Button,Alert, Select, Row,Icon, Form, Input,Tooltip,message } from 'antd';\nimport {getUrlParam} from '../../../utils/common'\nimport ExeCaseDrawer from '../ExeCaseDrawer'\n\nmessage.config({\n    top: 200\n});\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\n@inject('TestCaseManagerStore','ApiManagerStore','ExeRecordStore')\n@observer\nclass InsertIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '用例管理'},\n            {name: '编辑用例'},\n        ]);\n        this.props.ApiManagerStore.getApiDetailData()\n        if(getUrlParam('caseId',window.location.search) != \"\"){\n            this.props.TestCaseManagerStore.getDetailData()\n        }\n\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCompressDisplay:'',\n            isJsonFormatDisplay:'none',\n            dubboGroup:'',\n            leg: {\"userId\":\"*******\",\"ipAddr\":\"10.10.10.10\",\"appKey\":\"*******\",\"openId\":\"******\",\"unionId\":\"********\",\"deviceId\":\"*******\",\"appv\":\"\",\"os\":\"\"}\n        }\n    }\n    /**\n     * 获取子组件SingleTag中用户输入的tag标签\n     */\n    getTags = (tags) => {\n        this.props.ApiManagerStore.insertTags(tags)\n    };\n    /**\n     * 输入框和单选按钮产生的change事件\n     * @param n\n     * @param e\n     */\n    inputChange(n,e) {\n        let obj={};\n        obj[n]=e.target.value;\n        this.props.TestCaseManagerStore.changeDetailData(n,e.target.value);\n    }\n    optionChange(n,v,Option) {\n        this.props.TestCaseManagerStore.changeDetailData(n,v.toString() || '');\n    }\n\n    /**\n     * 保存用例\n     */\n    insert = (e) => {\n\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.TestCaseManagerStore.insert(this.props.ApiManagerStore.tags,this.props.ApiManagerStore.detailData,true)\n            }\n        });\n    }\n    /**\n     * 压缩参数\n     */\n    compressParams = () => {\n        this.setState({\n            'isCompressDisplay':'',\n            'isJsonFormatDisplay':'none',\n        })\n    }\n    /**\n     * json格式化\n     */\n    jsonFormat = () => {\n        this.setState({\n            'isCompressDisplay':'none',\n            'isJsonFormatDisplay':'',\n        })\n    }\n    timerExe = async(result) => {\n        // let data = await this.props.ExeRecordStore.getDetailData(result.data)\n        this.timerDate = setInterval(()=> this.tick(result.data));\n    }\n    handleClearTimeout(){\n        this.timerDate && clearInterval(this.timerDate);\n    }\n    componentWillUnmount(){\n        this.handleClearTimeout()\n    }\n    tick = async(data) => {\n        let detailData = await this.props.ExeRecordStore.getDetailData(data)\n        if(detailData.status == 2){\n            this.handleClearTimeout()\n        }\n    }\n\n    /**\n     * 只测试不保存\n     */\n    testCaseExe = async () => {\n        let caseId = getUrlParam('caseId',window.location.search);\n\n        if(caseId == \"\"){\n            message.warn(\"请先保存用例再执行！\")\n            return\n        }\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.TestCaseManagerStore.insert(this.props.ApiManagerStore.tags,this.props.ApiManagerStore.detailData,false)\n            }\n        });\n        let params =  {\"id\":null,\"caseIds\":[caseId],\"scheduleType\":1,\"env\":this.state.dubboGroup}\n        let result = await this.props.TestCaseManagerStore.exeCase(params,'case');\n        if(result.code == 200){\n            this.timerExe(result)\n\n            this.props.TestCaseManagerStore.showCaseDrawer()\n        }else{\n            message.warn(\"执行出现错误\")\n        }\n    }\n    handleCopy(copy){\n        message.success(\"复制成功\")\n    }\n\n    render(){\n\n        const { getFieldDecorator} = this.props.form;\n        const {detailData,tags} = this.props.ApiManagerStore\n        const {exeDetailData} = this.props.ExeRecordStore\n        const {insertButtonStatus,updateButtonStatus,caseDetailData,drawerVisible} = this.props.TestCaseManagerStore\n        var mockJson = \"\"\n        if(typeof caseDetailData.paramScript != \"undefined\"){\n            try {\n                if (typeof JSON.parse(caseDetailData.paramScript) == \"object\" ) {\n                    mockJson = JSON.parse(caseDetailData.paramScript)\n                }\n            }catch(e) {\n                console.log('error：'+e);\n            }\n        }\n        return(\n            <div className=\"container-bg\" style={{'marginLeft':'15px'}}>\n                <Form  layout=\"inline\" className=\"ant-advanced-search-form p-xs pb-0\" onSubmit={this.insert}>\n                    <Alert message=\"接口信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"\">\n                            <Tag color=\"geekblue\">接口归属应用：{detailData.appName}</Tag>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\">\n                            <Tag color=\"geekblue\">接口归属模块：{detailData.moduleName}</Tag>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"接口路径\">\n                            {getFieldDecorator('apiClassName', {\n                                initialValue: detailData.apiClassName,\n                                rules: [{ required: false, message: '请填写接口路径!' }],\n                            })(\n                                <Input disabled style={{ width: 823 }} />\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"方法名\">\n                            {getFieldDecorator('apiMethodName', {\n                                initialValue: detailData.apiMethodName,\n                                rules: [{ required: false, message: '请填写方法名!' }],\n                            })(\n                                <Input disabled style={{ width: 375 }}/>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"接口名\">\n                            <Input disabled style={{ width: 389 }} value={detailData.name}/>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"接口标签\">\n                            {tags.map((tag, index) => {\n                                const isLongTag = tag.length > 20;\n                                const tagElem = (\n                                    <Tag key={tag.id} >\n                                        {isLongTag ? `${tag.value.slice(0, 20)}...` : tag.value}\n                                    </Tag>\n                                );\n                                return isLongTag ? (\n                                    <Tooltip title={tag.value} key={tag.id}>\n                                        {tagElem}\n                                    </Tooltip>\n                                ) : (\n                                    tagElem\n                                );\n                            })}\n                        </FormItem>\n                    </Row>\n                    <Alert message=\"用例信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"用例名\">\n                            {getFieldDecorator('name', {\n                                initialValue: caseDetailData.name,\n                                rules: [{ required: true, message: '请填写用例名!' }],\n                            })(\n                                <Input style={{ width: 365 }} pllaceholder=\"请填写用例名\" onChange={this.inputChange.bind(this,'name')}/>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"优先级\">\n                            <span>\n                                 {getFieldDecorator('priority', {\n                                     initialValue: caseDetailData.priority,\n                                     rules: [{ required: true, message: '请选择优先级!' }],\n                                 })(\n                                     <Select style={{ width: 120 }} onChange={this.optionChange.bind(this,'priority')}>\n                                         <Option value=\"1\">1</Option>\n                                         <Option value=\"2\">2</Option>\n                                         <Option value=\"3\">3</Option>\n                                         <Option value=\"4\">4</Option>\n                                     </Select>\n                                 )}\n                                &nbsp;&nbsp;&nbsp;\n                                <Tag color=\"magenta\"> 1为最高，4为最低 </Tag>\n                            </span>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"描述\">\n                            {getFieldDecorator('desc', {\n                                initialValue: caseDetailData.desc,\n                                rules: [{ required: false, message: '请填写用例描述!' }],\n                            })(\n                                <TextArea rows={3} style={{ width: 852 }} onChange={this.inputChange.bind(this,'desc')}/>\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Alert message=\"接口参数信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            <b>接口入参：</b>\n                            <ReactJson src={eval(\"(\"+detailData.argsJsonFormat+\")\")}  enableClipboard={this.handleCopy} name={null}  theme=\"google\" style={{border:'1px solid #ccc','height':'180px','maxHeight':'180px','overflow-y':'auto' }}/>\n                            <b>接口出参：</b>\n                            <ReactJson src={eval(\"(\"+detailData.resultJsonFormat+\")\")}  enableClipboard={this.handleCopy} name={null} theme=\"google\" style={{border:'1px solid #ccc','height':'189px','maxHeight':'189px','overflow-y':'auto' }}/>\n                        </div>\n                        <div style={{float:'right',width:'51%'}}>\n                            <FormItem {...this.formItemLayout} label=\"\" >\n                                {getFieldDecorator('paramScript', {\n                                    initialValue: caseDetailData.paramScript,\n                                    rules: [{ required: false, message: '请填写接口参数信息!' }],\n                                })(\n                                    <TextArea rows={16} style={{'width':'1300px','marginTop':'19px',display:this.state.isCompressDisplay }} onChange={this.inputChange.bind(this,'paramScript')}/>\n                                )}\n                            </FormItem>\n                            <ReactJson src={mockJson}  enableClipboard={false}  name={null} style={{\"border\":'1px solid #ccc','height':'343px','marginBottom':'5px','maxHeight':'343px','overflow-y':'auto',\"display\":this.state.isJsonFormatDisplay  }}/>\n\n                            <Button type=\"primary\" style={{marginBottom:'5px'}} onClick={this.compressParams}>压缩</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button type=\"primary\" style={{marginBottom:'5px'}} onClick={this.jsonFormat}>格式化</Button>\n                        </div>\n                    </Row>\n                    <Alert message=\"dubbo contextParams\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px','marginTop':'6px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            {\n                                getUrlParam('caseId',window.location.search) != \"\" ?\n                                    <TextArea rows={6} style={{ width: 600}} value={caseDetailData.contextParamScript} placeholder='如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context,如：{\"userId\":\"5c0e5e0c881f449b9fe50923ea8f6183\"}，也可以参考右侧格式' onChange={this.inputChange.bind(this,'contextParamScript')}/> : <TextArea rows={6} style={{ width: 600}}  placeholder='如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context,如：{\"userId\":\"5c0e5e0c881f449b9fe50923ea8f6183\"}，也可以参考右侧格式' onChange={this.inputChange.bind(this,'contextParamScript')}/>\n                            }\n                        </div>\n                        <div style={{float:'right',width:'50%'}}>\n                            如果此dubbo接口是供hop网关使用，则可能需要填写dubbo context，如：\n                            <ReactJson src={this.state.leg} name={null}  enableClipboard={this.handleCopy} style={{border:'1px solid #ccc','height':'113px','marginBottom':'5px','maxHeight':'113px','overflow-y':'auto'  }}/>\n                        </div>\n                    </Row>\n                    <Alert message=\"结果校验规则（如：assert self.result.data != null:'结果data不能为空'）\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <div style={{float:'left',width:'48%'}}>\n                            {\n                                getUrlParam('caseId',window.location.search) != \"\" ?\n                                    <TextArea rows={6} style={{ width: 600 }} value={caseDetailData.validScript} placeholder=\"多个assert的规则需要换行写\" onChange={this.inputChange.bind(this,'validScript')}/>\n                                    :\n                                    <TextArea rows={6} style={{ width: 600 }} placeholder=\"多个assert的规则需要换行写\" onChange={this.inputChange.bind(this,'validScript')}/>\n                            }\n                        </div>\n                        <div style={{float:'right',width:'50%'}}>\n                            示例一：校验后返回布尔值作为校验结果(不推荐)return self.result.data != null<br/>\n                            示例二：使用强断言校验结果(推荐)assert self.result.data != null <br/>\n                            示例三：使用断言校验结果(推荐)assert self.result.data != null:'data不能为空'<br/>\n                            示例四：多个判断<br/>\n                            assert self.result.data != null:'结果data不能为空' <br/>\n                            assert self.result.data.itemId !=null:'结果itemId不能为空'  &nbsp;&nbsp;<a href=\"http://k.yangtuojia.com/pages/viewpage.action?pageId=18827049\" target=\"_blank\" ><Icon type=\"question-circle\" /> 更多写法帮助</a><br/>\n                        </div>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:insertButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}}>添加用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}}>修改用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginBottom:'8px'}} onClick={()=>{window.open(\"/edit_testcase?type=copy&apiId=\" + getUrlParam('apiId',window.location.search) + \"&caseId=\" + getUrlParam('caseId',window.location.search))}}>复制用例</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Button type=\"primary\" style={{marginBottom:'8px'}} onClick={this.testCaseExe}>保存并执行</Button>\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"\" style={{display:updateButtonStatus}}>\n                            <Input style={{ width: 280 }} placeholder=\"请输入测试用的dubbo分组\" allowClear={true}  onChange={e => this.setState({ dubboGroup: e.target.value })}/>\n                        </FormItem>\n                    </Row>\n                </Form>\n                <ExeCaseDrawer exeDetailData={exeDetailData} drawerVisible={drawerVisible}></ExeCaseDrawer>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(InsertIndex)"],"sourceRoot":""}