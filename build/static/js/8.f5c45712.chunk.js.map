{"version":3,"sources":["container/SceneManager/config.js","container/SceneManager/DragableBodyRow.js","container/TestCaseManager/SearchForm.js","container/SceneManager/InsertCaseModal.js","container/SceneManager/Update/index.js"],"names":["columns","context","title","dataIndex","key","render","row","name","width","record","href","id","target","className","insertCaseColumns","text","length","substr","str","editTimeStr","creatorName","validScript","paramScript","contextParamScript","desc","apiId","testApi","apiClassName","apiMethodName","content","color","updateHref","apiHref","onConfirm","deleteSceneCase","caseColumns","dragingIndex","BodyRow","this","props","isOver","connectDragSource","connectDropTarget","restProps","moveRow","style","cursor","index","React","Component","rowSource","beginDrag","DragableBodyRow","DropTarget","drop","monitor","dragIndex","getItem","hoverIndex","connect","dropTarget","DragSource","dragSource","FormItem","Item","Option","SearchForm","inject","observer","handleSearch","e","preventDefault","TestCaseManagerStore","initData","formItemLayout","labelCol","span","wrapperCol","state","n","changeTableRequestData","value","v","onSubmit","gutter","label","placeholder","onChange","inputChange","bind","allowClear","optionChange","allTags","map","item","allCreators","type","htmlType","create","InsertCaseModal","onChangePage","page","console","log","selectedRowKeys","selectedRows","message","warn","SceneManagerStore","insertCase","hideInsertCaseModal","dataSource","pageNo","pageSize","totalCount","insertCaseModalVisible","mydataSource","toJS","rowSelection","setState","destroyOnClose","visible","onOk","okModal","onCancel","hideModal","okText","cancelText","bordered","pagination","size","current","total","UpdateIndex","components","body","data","caseDataSource","dragRow","newData","update","$splice","orderCase","handleSubmit","form","validateFieldsAndScroll","err","values","updateScene","setBreadcrumb","getDetailData","changeDetailData","toString","showInsertCaseModal","caseId","detailData","getFieldDecorator","marginLeft","initialValue","rules","required","env","scheduleType","onClick","updateCaseDataSource","testCaseSchedules","backend","HTML5Backend","onRow"],"mappings":"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","file":"static/js/8.f5c45712.chunk.js","sourcesContent":["import React  from 'react';\nimport { Popover,Popconfirm} from 'antd';\n\nexport const columns = (context) => [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: '执行方式',\n        dataIndex: 'scheduleType',\n        key: 'scheduleType',\n        render: (row) => {\n            var name = ''\n            if(row == 0){\n                name = \"顺序执行\"\n            }else if(row == 1){\n                name = \"并行执行\"\n            }else if(row == 2){\n                name = \"自定义\"\n            }\n            return (\n                <span>{name}</span>\n            )\n        }\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '用例组',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTime',\n        key: 'editTime',\n    },\n    {\n        title: '操作',\n        width: '10%',\n        key: 'operation',\n        render:(row,record) => {\n            let href = \"/update_scene?sceneId=\" + record.id\n            return (\n                <div>\n                    <span>\n                        <a href={href} target=\"_blank\">修改</a>&nbsp;\n                        <a href=\"$\" target=\"_blank\" className=\"vLine\"> 执行</a>\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const insertCaseColumns = (context) => [\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%'\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width:'15%'\n    },\n    {\n        title: '操作',\n        width: '17%',\n        key: 'operation',\n        render:(row,record) => {\n            let updateHref = '/edit_testcase?apiId=' + record.apiId + \"&caseId=\" + record.id\n            let apiHref = '/api_manager?apiId=' + record.apiId\n            return (\n                <span>\n                    <Popconfirm title=\"确定从此场景中移除此用例吗？\" onConfirm={() => context.deleteSceneCase(record.id)} >\n                      <a href=\"#\">移除</a>&nbsp;\n                    </Popconfirm>\n                    <a href={updateHref} target=\"_blank\"  className=\"vLine\"> 修改用例</a>&nbsp;\n                    <a href={apiHref} target=\"_blank\"  className=\"vLine\"> 接口</a>\n                </span>\n            )\n        }\n    }\n];\n\n\nexport const caseColumns = (context) => [\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%'\n    },\n\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            var name = record.name.length > 16 ? record.name.substr(0,16) + '...' : record.name;\n            let str = <div>\n                <span>用例ID：{record.id}</span><br/>\n                <span>用例名称：{record.name}</span><br/>\n                <span>更新时间：{record.editTimeStr}</span><br/>\n                <span>创建人：{record.creatorName}</span><br/>\n                <span>校验规则：{record.validScript}</span><br/>\n                <span>入参：{record.paramScript}</span><br/>\n                <span>其他参数：{record.contextParamScript}</span><br/>\n                <span>描述：{record.desc}</span><br/>\n                <span>接口ID：{record.apiId}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>接口名：{record.testApi.name}</span><br/>\n            </div>\n            return (\n                <span  >\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%'\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n    },\n    {\n        title: '方法名称',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.testApi.apiMethodName.length > 12 ? record.testApi.apiMethodName.substr(0,12) + '...' : record.testApi.apiMethodName;\n            return (\n                <span>\n                    <Popover content={record.testApi.apiMethodName} >{name}</Popover>\n                </span>\n            )\n        }\n    },\n\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%'\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width:'15%'\n    }\n];\n\n\n\n","import { DragSource, DropTarget } from 'react-dnd';\nimport React from 'react';\n\n\n/**\n * 拖拽表格顺序\n * @type {number}\n */\nlet dragingIndex = -1;\nclass BodyRow extends React.Component {\n    render() {\n        const { isOver, connectDragSource, connectDropTarget, moveRow, ...restProps } = this.props;\n        const style = { ...restProps.style, cursor: 'move' };\n\n        let { className } = restProps;\n        if (isOver) {\n            if (restProps.index > dragingIndex) {\n                className += ' drop-over-downward';\n            }\n            if (restProps.index < dragingIndex) {\n                className += ' drop-over-upward';\n            }\n        }\n\n        return connectDragSource(\n            connectDropTarget(<tr {...restProps} className={className} style={style} />),\n        );\n    }\n}\n\nconst rowSource = {\n    beginDrag(props) {\n        dragingIndex = props.index;\n        return {\n            index: props.index,\n        };\n    },\n};\n\nconst rowTarget = {\n    drop(props, monitor) {\n        const dragIndex = monitor.getItem().index;\n        const hoverIndex = props.index;\n\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n            return;\n        }\n\n        // Time to actually perform the action\n        props.moveRow(dragIndex, hoverIndex);\n\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        monitor.getItem().index = hoverIndex;\n    },\n};\n\nexport const DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n}))(\n    DragSource('row', rowSource, connect => ({\n        connectDragSource: connect.dragSource(),\n    }))(BodyRow),\n);","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport {  Button, Select,Icon, Row, Col, Form, Input } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n@inject('TestCaseManagerStore')\n@observer\nclass SearchForm extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\n\n    inputChange(n,e) {\n        this.props.TestCaseManagerStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.TestCaseManagerStore.changeTableRequestData(n,v || '');\n    }\n    handleSearch = (e) => {\n        e.preventDefault();\n        this.props.TestCaseManagerStore.initData(1);\n    }\n\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n\n    render(){\n\n        return (\n            <Form className=\"ant-advanced-search-form p-xs pb-0\"  onSubmit={this.handleSearch}>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"接口ID\">\n                            <Input placeholder=\"请输入接口ID\" onChange={this.inputChange.bind(this,'apiId')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"用例名\">\n                            <Input placeholder=\"请输入用例名\" onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"标签\">\n                            <Select name=\"tagId\" allowClear={true} placeholder=\"请选择标签搜索\"\n                                    onChange={this.optionChange.bind(this,'tagId')}>\n                                {this.props.allTags.map(item => <Option key={item.id} value={item.id}>{item.value}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"创建人\">\n                            <Select name=\"creatorId\" allowClear={true}  placeholder=\"请选择创建人搜索\"\n                                    onChange={this.optionChange.bind(this,'creatorId')}>\n                                {this.props.allCreators.map(item => <Option key={item.id} value={item.value}>{item.value}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"优先级\">\n                            <Select  placeholder=\"请选择优先级搜索\" onChange={this.optionChange.bind(this,'priority')}>\n                                <Option value=\"1\">1</Option>\n                                <Option value=\"2\">2</Option>\n                                <Option value=\"3\">3</Option>\n                                <Option value=\"4\">4</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={3} style={{'marginTop':'3px'}}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                <Icon type=\"search\" /> 搜索\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(SearchForm)\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Form, Pagination, Modal } from 'antd';\nimport SearchForm from '../TestCaseManager/SearchForm';\nimport {caseColumns} from \"./config\";\nimport common from \"../../style/common.css\";\nimport {message} from \"antd/lib/index\";\nconst FormItem = Form.Item;\n\n@inject('TestCaseManagerStore')\n@inject('SceneManagerStore')\n@observer\nclass InsertCaseModal extends Component{\n    componentDidMount() {\n        this.props.TestCaseManagerStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state={\n            selectedRowKeys:[],\n            selectedRows:[]\n        }\n    }\n\n    /**\n     * 点击保存时\n     */\n    okModal(){\n        if(this.state.selectedRowKeys.length <= 0){\n            message.warn(\"请先勾选需要追加的用例\")\n        }else{\n            console.log(this.state.selectedRowKeys)\n            console.log(this.state.selectedRows)\n            this.props.SceneManagerStore.insertCase(this.state.selectedRows);\n        }\n    }\n\n    hideModal(){\n        this.props.SceneManagerStore.hideInsertCaseModal('insert');\n    }\n    onChangePage = page => {\n        console.log(page);\n        this.props.TestCaseManagerStore.initData(page);\n    };\n\n    render(){\n        const {dataSource,pageNo,pageSize,totalCount} = this.props.TestCaseManagerStore\n        const { insertCaseModalVisible} = this.props\n        const mydataSource = dataSource.toJS()\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n                this.setState({\n                    selectedRowKeys: selectedRowKeys,\n                    selectedRows: selectedRows\n                });\n            }\n        };\n        return (\n            <Modal\n                destroyOnClose\n                title=\"追加用例\"\n                width=\"1100px\"\n                visible={insertCaseModalVisible}\n                onOk={this.okModal.bind(this)}\n                onCancel={this.hideModal.bind(this)}\n                okText=\"添加\"\n                cancelText=\"取消\"\n                className=\"model\" style={{'marginTop':'28px'}}>\n                <SearchForm />\n                <Table rowSelection={rowSelection}\n                    bordered\n                    columns={caseColumns(this)} pagination={false}\n                    dataSource={mydataSource}  size=\"middle\"/>\n                <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n            </Modal>\n        )\n    }\n}\n\nexport default Form.create()(InsertCaseModal)\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table, Button, Tag, Select,Icon, Row, Col, Form, Input } from 'antd';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\nimport InsertCaseModal from '../InsertCaseModal'\nimport {insertCaseColumns} from '../config';\nimport {DragableBodyRow} from '../DragableBodyRow'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n\n@inject('TestCaseManagerStore')\n@inject('SceneManagerStore')\n@observer\nclass UpdateIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '场景管理'},\n            {name: '修改场景'}\n        ]);\n        this.props.SceneManagerStore.getDetailData()\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            data:[]\n        }\n    }\n    components = {\n        body: {\n            row: DragableBodyRow,\n        },\n    };\n    /**\n     * 上下移动数据\n     * @param dragIndex\n     * @param hoverIndex\n     */\n    moveRow = (dragIndex, hoverIndex) => {\n        debugger\n        const data = this.props.SceneManagerStore.caseDataSource.toJS()\n        const dragRow = data[dragIndex];\n        const newData =  update(data,  {$splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]]});\n        this.props.SceneManagerStore.orderCase(newData)\n    };\n    inputChange(n,e) {\n        this.props.SceneManagerStore.changeDetailData(n,e.target.value);\n    }\n    optionChange(n,v,Option) {\n        this.props.SceneManagerStore.changeDetailData(n,v.toString() || '');\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.SceneManagerStore.updateScene();\n            }\n        });\n    }\n\n    showInsertCaseModal(){\n        this.props.SceneManagerStore.showInsertCaseModal()\n    }\n    deleteSceneCase(caseId){\n        this.props.SceneManagerStore.deleteSceneCase(caseId)\n    }\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n\n    render(){\n        const {insertCaseModalVisible,caseDataSource,detailData} = this.props.SceneManagerStore\n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div style={{width:'96%',marginLeft:'25px'}}>\n                <Form  className=\"ant-advanced-search-form p-xs pb-0\"  onSubmit={this.handleSubmit}>\n                    <Row gutter={48}>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"场景名\">\n                                {getFieldDecorator('name', {\n                                    initialValue: detailData.name,\n                                    rules: [{ required: true, message: '请输入场景名!' }],\n                                })(\n                                    <Input placeholder=\"请输入场景名\"  style={{ width: 200 }} onChange={this.inputChange.bind(this,'name')}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"环境\">\n                                {getFieldDecorator('env', {\n                                    initialValue: detailData.env,\n                                    rules: [{ required: true, message: '请输入环境!' }],\n                                })(\n                                    <Input placeholder=\"请输入场景环境\"  style={{ width: 200 }}  onChange={this.inputChange.bind(this,'env')}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={8}>\n                            <FormItem {...this.formItemLayout} label=\"执行方式\">\n                                {getFieldDecorator('scheduleType', {\n                                    initialValue: detailData.scheduleType == \"0\" ? \"顺序执行\":\"并行执行\",\n                                    rules: [{ required: true, message: '请选择执行方式!' }],\n                                })(\n                                    <Select  style={{ width: 130 }} onChange={this.optionChange.bind(this,'scheduleType')}>\n                                        <Option value=\"0\">顺序执行</Option>\n                                        <Option value=\"1\">并行执行</Option>\n                                    </Select>\n                                )}\n                               &nbsp; &nbsp;\n                                <Button type=\"primary\" onClick={this.showInsertCaseModal.bind(this)} >追加用例</Button>\n                                <InsertCaseModal updateCaseDataSource={detailData.testCaseSchedules} insertCaseModalVisible={insertCaseModalVisible}></InsertCaseModal>\n                            </FormItem>\n                        </Col>\n                    </Row>\n\n                    <Row gutter={48}>\n                        <Tag color=\"purple\" style={{'marginBottom':'8px'}}>  <Icon type=\"smile\" /> 上下拖拽可以移动表格中用例顺序哦～  </Tag>\n                        <DndProvider backend={HTML5Backend}>\n                            <Table\n                                bordered\n                                columns={insertCaseColumns(this)}\n                                dataSource={caseDataSource.toJS()} components={this.components}\n                                onRow={(record, index) => ({\n                                    index,\n                                    moveRow: this.moveRow,\n                                })} />\n                        </DndProvider>\n                    </Row>\n                    <Row style={{'marginTop':'6px'}}>\n                        <Col span={7}>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    保存此场景数据\n                                </Button> &nbsp; &nbsp; &nbsp;\n                                <Button type=\"primary\" >\n                                    执行场景\n                                </Button>  &nbsp; &nbsp; &nbsp;\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(UpdateIndex)\n"],"sourceRoot":""}