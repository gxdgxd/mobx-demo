{"version":3,"sources":["container/TreeManager/InsertTreeModal.js","container/TreeManager/TreeManager.js","container/ApiManager/config.js","container/ApiManager/SearchForm.js","container/ApiManager/index.js"],"names":["FormItem","Item","InsertTreeModal","inject","observer","props","state","this","form","validateFieldsAndScroll","err","values","TreeManagerStore","insertTreeModule","hideTreeModal","n","e","target","value","changeTableRequestData","getFieldDecorator","treeModalVisible","tableRequestData","modalName","destroyOnClose","title","width","visible","onOk","okModal","bind","onCancel","hideModal","okText","cancelText","className","layout","formItemLayout","label","initialValue","name","rules","required","message","style","placeholder","onChange","inputChange","Component","create","TreeNode","TreeManager","onSelect","selectedKeys","info","console","log","appId","node","dataRef","moduleId","appName","moduleName","pageType","TestCaseManagerStore","initData","ApiManagerStore","setTreeParams","handleAddTree","id","parentId","stopPropagation","showTreeModal","type","handleEditTree","parentIdF","handleDeleteTree","deleteTree","getNodeTitle","level","onClick","theme","onConfirm","onLoadData","treeNode","a","children","getTreeModuleDataSouce","renderTreeNodes","data","map","item","key","getTreeAppDataSouce","treeAppDataSource","maxHeight","loadData","columns","context","dataIndex","render","text","record","apiMethodName","length","substr","str","creatorName","apiClassName","editTimeStr","content","color","row","updateHref","searchCaseHref","insertCaseHref","href","insertColumns","editable","desc","tags","inputVisible","inputValue","tag","index","isLongTag","tagElem","closable","onClose","handleClose","slice","ref","saveInputRef","size","handleInputChange","onBlur","handleInputConfirm","onPressEnter","showInput","background","borderStyle","insertApi","Option","SearchForm","handleSubmit","preventDefault","labelCol","span","wrapperCol","v","onSubmit","gutter","allowClear","optionChange","allCreators","allTags","htmlType","window","open","ApiManagerList","onChangePage","page","json_str","expandedKeys","autoExpandParent","setBreadcrumb","CommonStore","getAllTags","getAllCreators","obj","setState","dataSource","pageNo","pageSize","totalCount","mydataSource","toJS","bordered","pagination","current","total"],"mappings":"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","file":"static/js/10.3feaedaa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport {Row, Form, Input, Modal} from 'antd';\nconst FormItem = Form.Item;\n\n\n@inject('TreeManagerStore')\n@observer\nclass InsertTreeModal extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\n    okModal(){\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.TreeManagerStore.insertTreeModule();\n            }\n        });\n    }\n\n    hideModal(){\n        this.props.TreeManagerStore.hideTreeModal();\n    }\n    /**\n     * 输入框和单选按钮产生的change事件\n     * @param n\n     * @param e\n     */\n    inputChange(n,e) {\n        let obj={};\n        obj[n]=e.target.value;\n        this.props.TreeManagerStore.changeTableRequestData(n,e.target.value);\n    }\n\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        const { treeModalVisible,tableRequestData,modalName} = this.props\n        return (\n            <Modal\n                destroyOnClose\n                title={modalName}\n                width=\"900px\"\n                visible={treeModalVisible}\n                onOk={this.okModal.bind(this)}\n                onCancel={this.hideModal.bind(this)}\n                okText=\"保存\"\n                cancelText=\"取消\"\n                className=\"model\" width={500} >\n\n                <Form  layout=\"inline\" className=\"ant-advanced-search-form p-xs pb-0\">\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"模块名称\" >\n                            {getFieldDecorator('name', {\n                                initialValue: tableRequestData.name,\n                                rules: [{ required: true, message: '请填写模块名称!' }],\n                            })(\n                                <Input  style={{ width: 250 }} placeholder='请填写模块名称!' onChange={this.inputChange.bind(this,'name')}/>\n                            )}\n                        </FormItem>\n                    </Row>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nexport default Form.create()(InsertTreeModal)\n","import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport {  Icon,Tree, Popconfirm} from 'antd';\nimport InsertTreeModal from './InsertTreeModal';\nimport TreeManagerStore from \"../../stores/TreeManager/TreeManagerStore\";\n\nconst { TreeNode } = Tree;\n\n@inject('TreeManagerStore','TestCaseManagerStore','ApiManagerStore')\n@observer\nclass TreeManager extends Component {\n    componentDidMount() {\n        this.props.TreeManagerStore.getTreeAppDataSouce();\n    }\n    constructor(props){\n        super(props);\n    }\n    onSelect = (selectedKeys, info) => {\n        console.log(info)\n        let appId = info.node.props.dataRef.appId\n        let moduleId = info.node.props.dataRef.moduleId\n        let appName = info.node.props.dataRef.appName\n        let moduleName = info.node.props.dataRef.moduleName\n        let pageType = this.props.pageType\n        if(pageType == 'case'){\n            this.props.TestCaseManagerStore.initData(1,appId,moduleId)\n        }else if(pageType == \"api\"){\n            this.props.ApiManagerStore.initData(1,appId,moduleId)\n        }else if(pageType == \"insertApi\"){\n            this.props.ApiManagerStore.setTreeParams(appId,moduleId,appName,moduleName)\n        }\n    };\n    /**\n     * 新增节点\n     */\n    handleAddTree = (e,id,parentId,appId) => {\n        e.stopPropagation();\n        if (id) {\n            console.log(e.target.value)\n            this.props.TreeManagerStore.showTreeModal({\n                moduleName:\"添加模块\",\n                parentId:parentId,\n                appId:appId,\n                type:\"insert\"\n            })\n        }\n    };\n    /**\n     * 编辑节点\n     */\n    handleEditTree = (e, name,id,parentIdF,appId) => {\n        e.stopPropagation();\n        if (id) {\n            this.props.TreeManagerStore.showTreeModal({\n                id:id,\n                moduleName:\"修改模块\",\n                parentIdF:parentIdF,\n                appId:appId,\n                name:name,\n                type:\"update\"\n            });\n        }\n    };\n    /**\n     * 编辑节点\n     */\n    handleDeleteTree = (id) => {\n        if (id) {\n            this.props.TreeManagerStore.deleteTree(id)\n        }\n    };\n    /**\n     * 获取节点的title内容\n     */\n    getNodeTitle = (title, id, level,parentId,parentIdF,appId) => {\n        return (\n            <div className=\"tree-title\">\n                <span>\n                    {title}\n                </span>\n                <div className=\"tree-parent-div \">\n                    <span className=\"tree-span\" onClick={e => this.handleAddTree(e,id,parentId,appId)}>\n                       {level !== 4 &&\n                            <Icon type=\"plus-circle\" theme=\"outlined\"/>\n                       }\n                    </span>\n                    <span className=\"tree-span\"  onClick={e => this.handleEditTree(e, title,id,parentIdF,appId)}>\n                       {level != 1 &&\n                            <Icon type=\"form\" theme=\"outlined\" />\n                       }\n                    </span>\n                    <span className=\"tree-span\" >\n                         {level != 1 &&\n                              <Popconfirm title=\"确定删除此参数吗？\" onConfirm={() => this.handleDeleteTree(id)}>\n                                 <Icon type=\"delete\" theme=\"outlined\"/>\n                              </Popconfirm>\n                         }\n                    </span>\n                </div>\n            </div>\n        );\n    };\n    onLoadData = async (treeNode) => {\n        if (treeNode.props.children) {\n            return;\n        }\n        this.props.TreeManagerStore.getTreeModuleDataSouce(treeNode.props.dataRef)\n    }\n\n    renderTreeNodes = (data, level) => {\n        return (\n            data.map(item => {\n                const title = this.getNodeTitle(item.title, item.id, level,item.parentId,item.parentIdF,item.appId);\n                if (item.children) {\n                    return (\n                        <TreeNode title={title} key={item.id} dataRef={item}>\n                            {this.renderTreeNodes(item.children,level + 1)}\n                        </TreeNode>\n                    );\n                }\n                return <TreeNode {...item} title={title} key={item.id} dataRef={item} />;\n            })\n        );\n    };\n\n    render(){\n        const {treeAppDataSource,treeModalVisible,tableRequestData,modalName} = this.props.TreeManagerStore\n        return(\n            <div style={{'maxHeight':this.props.maxHeight,'overflow-y':'auto' }}>\n                <Tree onSelect={this.onSelect} loadData={this.onLoadData}>{this.renderTreeNodes(treeAppDataSource,1)}</Tree>\n                <InsertTreeModal modalName={modalName} treeModalVisible={treeModalVisible} tableRequestData={tableRequestData}></InsertTreeModal>\n            </div>\n        )\n    }\n}\n\nexport default TreeManager;","import React  from 'react';\nimport { Icon,Tag,Input,Tooltip,Popconfirm,Popover} from 'antd';\nimport common from \"../../style/common.css\";\n\nexport const columns = (context) => [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        key: 'id',\n        width:'7%'\n    },\n    {\n        title: '方法名',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'15%',\n        render:function(text, record){\n            var name = record.apiMethodName.length > 12 ? record.apiMethodName.substr(0,12) + '...' : record.apiMethodName;\n            let str = <div>\n                        <span>方法名：{record.apiMethodName}</span><br/>\n                        <span>创建人：{record.creatorName}</span><br/>\n                        <span>接口路径：{record.apiClassName}</span><br/>\n                        <span>更新时间：{record.editTimeStr}</span>\n                      </div>\n            return (\n                <span>\n                    <Popover content={str} >\n                        <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '接口名',\n        dataIndex: 'name',\n        key: 'name',\n        width:'19%',\n        render:function(text, record){\n            var name = record.name.length > 20 ? record.name.substr(0,20) + '...' : record.name;\n            return (\n                <span  >\n                    <Popover content={record.name} >\n                        {name}\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '应用名',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:'10%',\n    },\n    {\n        title: 'groupId',\n        dataIndex: 'groupId',\n        key: 'groupId',\n        width:'13%',\n    },\n    {\n        title: 'artifactId',\n        dataIndex: 'artifactId',\n        key: 'artifactId',\n        width:'13%',\n    },\n    {\n        title: '操作',\n        width: '22%',\n        key: 'operation',\n        render:(row,record) => {\n            let updateHref = \"/update_api?apiId=\" + record.id\n            let searchCaseHref = \"/testcase_manager?apiId=\" + record.id\n            let insertCaseHref = \"/edit_testcase?apiId=\" + record.id\n\n            return (\n                <span>\n                    <a href={updateHref} target=\"_blank\">修改接口</a>&nbsp;\n                    <a href={searchCaseHref} target=\"_blank\" className=\"vLine\"> 查看用例</a>&nbsp;\n                    <a href={insertCaseHref} target=\"_blank\" className=\"vLine\"> 添加用例</a>\n                </span>\n            )\n        }\n    }\n];\nexport const insertColumns = (context) => [\n    {\n        title: '接口路径',\n        dataIndex: 'apiClassName',\n        key: 'apiClassName',\n        width:'25%',\n        render:function(text, record){\n            var name = record.apiClassName.length > 27 ? record.apiClassName.substr(0,27) + '...' : record.apiClassName;\n            return (\n                <span  >\n                    <Popover content={record.apiClassName} >\n                        {name}\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '方法名',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:'16%',\n        render:function(text, record){\n            var name = record.apiMethodName.length > 14 ? record.apiMethodName.substr(0,14) + '...' : record.apiMethodName;\n            return (\n                <span  >\n                    <Popover content={record.apiMethodName} >\n                        {name}\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '接口名',\n        dataIndex: 'name',\n        key: 'name',\n        width:'13%',\n        editable: true,\n        render:(row,record) => {\n            if(record.name != null){\n                return (\n                    <span>{record.name}</span>\n                )\n            }else{\n                return (\n                    <span><font color=\"orange\">无</font></span>\n                )\n            }\n        }\n    },\n    {\n        title: '描述',\n        dataIndex: 'desc',\n        key: 'desc',\n        width:'16%',\n        editable: true,\n        render:(row,record) => {\n            if(record.desc != null){\n                return (\n                    <span>{record.desc}</span>\n                )\n            }else{\n                return (\n                    <span><font color=\"orange\">无</font></span>\n                )\n            }\n        }\n    },\n    {\n        title: '打标签',\n        dataIndex: 'tag',\n        key: 'tag',\n        width:'20%',\n        render:(row,record) => {\n            const {tags,inputVisible, inputValue } = context.state;\n\n            return (\n                <div>\n                    {tags.map((tag, index) => {\n                        const isLongTag = tag.length > 20;\n                        const tagElem = (\n                            <Tag key={tag} closable  onClose={() => context.handleClose(tag)}>\n                                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                            </Tag>\n                        );\n                        return isLongTag ? (\n                            <Tooltip title={tag} key={tag}>\n                                {tagElem}\n                            </Tooltip>\n                        ) : (\n                            tagElem\n                        );\n                    })}\n                    {inputVisible && (\n                        <Input\n                        ref={context.saveInputRef}\n                        type=\"text\"\n                        size=\"small\"\n                        style={{ width: 78 }}\n                        value={inputValue}\n                        onChange={context.handleInputChange}\n                        onBlur={context.handleInputConfirm}\n                        onPressEnter={context.handleInputConfirm}\n                        />\n                    )}\n                    {!inputVisible && (\n                        <Tag onClick={context.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                            <Icon type=\"plus\" /> New Tag\n                        </Tag>\n                    )}\n                </div>\n            )\n        }\n    },\n    {\n        title: '操作',\n        width: '7%',\n        key: 'operation',\n        render:(row,record) => {\n            return (\n                <div>\n                    <span >\n                        <Popconfirm title=\"确定添加此接口吗？\" onConfirm={() => context.insertApi(record)} >\n                            <a href=\"#\" >添加</a>\n                        </Popconfirm>\n                    </span>\n                </div>\n            )\n        }\n    }\n\n]\n\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Button, Select,Icon, Row, Col, Form, Input } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n@inject('ApiManagerStore')\n@observer\nclass SearchForm extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    inputChange(n,e) {\n        this.props.ApiManagerStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.ApiManagerStore.changeTableRequestData(n,v || '');\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.ApiManagerStore.initData(1);\n    }\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n    render(){\n        return (\n            <Form  className=\"ant-advanced-search-form p-xs pb-0\"  onSubmit={this.handleSubmit}>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"接口ID\">\n                            <Input placeholder=\"请输入接口ID\" onChange={this.inputChange.bind(this,'id')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"接口名\">\n                            <Input placeholder=\"请输入接口名\" onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"方法名\">\n                            <Input placeholder=\"请输入方法名\" onChange={this.inputChange.bind(this,'apiMethodName')}/>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"创建人\">\n                            <Select name=\"creatorId\" allowClear={true}  placeholder=\"请选择创建人搜索\"\n                                    onChange={this.optionChange.bind(this,'creatorId')}>\n                                {this.props.allCreators.map(item => <Option key={item.id} value={item.value}>{item.value}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"标签\">\n                            <Select name=\"tagId\" allowClear={true} placeholder=\"请选择标签搜索\"\n                                    onChange={this.optionChange.bind(this,'tagId')}>\n                                {this.props.allTags.map(item => <Option key={item.id} value={item.id}>{item.value}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={3}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                <Icon type=\"search\" /> 搜索\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                    <Col span={3} >\n                        <Form.Item>\n                            <Button type=\"primary\"  onClick={()=>{window.open(\"/insert_api\")}}><Icon type=\"plus\" /> 添加接口</Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(SearchForm)\n\n","import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Row, Col,Icon,Pagination} from 'antd';\nimport {columns} from './config';\nimport SearchForm from './SearchForm';\nimport TreeManager from '../TreeManager/TreeManager';\nimport common from \"../../style/common.css\";\n\n@inject('ApiManagerStore','CommonStore',)\n@observer\nclass ApiManagerList extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '接口管理'},\n        ]);\n        this.props.ApiManagerStore.initData(1);\n        this.props.CommonStore.getAllTags();\n        this.props.CommonStore.getAllCreators();\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            json_str:{},\n            expandedKeys: [],\n            autoExpandParent: true,\n            selectedKeys: [],\n        }\n    }\n\n    inputChange(n,e) {\n        let obj={};\n        obj[n]=e.target.value;\n        this.setState(obj);\n    }\n\n    onChangePage = page => {\n        console.log(page);\n        this.props.ApiManagerStore.initData(page);\n    };\n    render(){\n        const {dataSource,pageNo,pageSize,totalCount} = this.props.ApiManagerStore\n        const {allTags,allCreators} = this.props.CommonStore\n        const mydataSource = dataSource.toJS()\n\n        return(\n            <div className=\"container-bg\">\n                <Row>\n                    <Col span={4}>\n                        <TreeManager pageType=\"api\" maxHeight=\"700px\"/>\n                    </Col>\n                    <Col span={20}>\n                        <SearchForm allTags={allTags} allCreators={allCreators} />\n                        <Table\n                            bordered\n                            columns={columns(this)}\n                            dataSource={mydataSource} pagination={false}\n                        />\n                        <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default ApiManagerList;"],"sourceRoot":""}