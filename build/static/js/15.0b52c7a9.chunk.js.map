{"version":3,"sources":["container/ApiManager/Update/index.js"],"names":["FormItem","Column","ColumnGroup","Item","Option","TextArea","RangePicker","Group","DetailIndex","inject","observer","props","handleClose","removedTag","tags","ApiManagerStore","filter","tag","id","console","log","setState","showInput","inputVisible","input","focus","handleInputChange","e","inputValue","target","value","handleInputConfirm","state","indexOf","insertTag","saveInputRef","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","updateApi","this","setBreadcrumb","name","getApiDetailData","n","obj","changeDetailData","getFieldDecorator","detailData","style","layout","className","onSubmit","message","type","backgroundColor","border","formItemLayout","label","initialValue","groupId","rules","required","disabled","width","artifactId","version","showSearch","key","apiClassName","apiMethodName","onChange","inputChange","bind","creatorName","map","index","isLongTag","length","tagElem","closable","onClose","slice","title","ref","size","onBlur","onPressEnter","onClick","background","borderStyle","desc","rows","htmlType","Component","create"],"mappings":"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","file":"static/js/15.0b52c7a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { observable, action, computed,toJS } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Tag, Button,Tooltip,Alert, Radio, Select, Row, Col, Form, DatePicker, Input, Modal,Icon,Upload } from 'antd';\nconst { Column, ColumnGroup } = Table;\n\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { RangePicker } = DatePicker;\nconst RadioGroup = Radio.Group;\nconst { TextArea } = Input;\n\n\n@inject('ApiManagerStore')\n@observer\nclass DetailIndex extends Component{\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '接口管理'},\n            {name: '修改接口'},\n        ]);\n        this.props.ApiManagerStore.getApiDetailData()\n    }\n    constructor(props){\n        super(props);\n        this.state={\n            tags:[],\n            inputVisible: false,\n            inputValue: '',\n        }\n    }\n    handleClose = removedTag => {\n        debugger\n        const tags = this.props.ApiManagerStore.tags.filter(tag => tag.id !== removedTag);\n        console.log(tags);\n        this.setState({ tags });\n    };\n\n    showInput = () => {\n        this.setState({ inputVisible: true }, () => this.input.focus());\n    };\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.target.value });\n    };\n\n    handleInputConfirm = () => {\n        const { inputValue } = this.state;\n        let { tags } = this.state\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue];\n        }\n        this.props.ApiManagerStore.insertTag(tags[0])\n        this.setState({\n            inputVisible: false,\n            inputValue: '',\n        });\n    };\n\n    saveInputRef = input => (this.input = input);\n\n    /**\n     * 输入框和单选按钮产生的change事件\n     * @param n\n     * @param e\n     */\n    inputChange(n,e) {\n        let obj={};\n        obj[n]=e.target.value;\n        this.setState(obj);\n        this.props.ApiManagerStore.changeDetailData(n,e.target.value);\n    }\n    handleSubmit = (e) => {\n\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.ApiManagerStore.updateApi(1);\n            }\n        });\n    }\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        debugger\n        const { detailData,tags} = this.props.ApiManagerStore\n        const { inputVisible, inputValue } = this.state;\n\n        return (\n            <div  style={{'marginLeft':'15px'}}>\n                <Form  layout=\"inline\" className=\"ant-advanced-search-form p-xs pb-0\" onSubmit={this.handleSubmit}>\n                    <Alert message=\"api包信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"groupId\">\n                            {getFieldDecorator('groupId', {\n                                initialValue: detailData.groupId,\n                                rules: [{ required: true, message: '请填写groupId!' }],\n                            })(\n                                <Input disabled style={{ width: 190 }} value={detailData.groupId}/>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"artifactId\">\n                            {getFieldDecorator('artifactId', {\n                                initialValue: detailData.artifactId,\n                                rules: [{ required: true, message: '请填写artifactId!' }],\n                            })(\n                                <Input disabled style={{ width: 190 }} value={detailData.groupId}/>\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Alert message=\"接口信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"应用名\">\n                            {getFieldDecorator('version', {\n                                initialValue: detailData.version,\n                                rules: [{ required: true, message: '请填写version!' }],\n                            })(\n                                <Select style={{ width: 145 }}  showSearch >\n                                    <Option key=\"1\" value=\"1\">1</Option>\n                                </Select>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"一级模块\">\n                            {getFieldDecorator('version', {\n                                initialValue: detailData.version,\n                                rules: [{ required: false, message: '请填写version!' }],\n                            })(\n                                <Select style={{ width: 145 }}  showSearch >\n                                    <Option key=\"1\" value=\"1\">1</Option>\n                                </Select>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"二级模块\">\n                            {getFieldDecorator('version', {\n                                initialValue: detailData.version,\n                                rules: [{ required: false, message: '请填写version!' }],\n                            })(\n                                <Select style={{ width: 145 }}  showSearch >\n                                    <Option key=\"1\" value=\"1\">1</Option>\n                                </Select>\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"三级模块\">\n                            {getFieldDecorator('version', {\n                                initialValue: detailData.version,\n                                rules: [{ required: false, message: '请填写version!' }],\n                            })(\n                                <Select style={{ width: 145 }}  showSearch >\n                                    <Option key=\"1\" value=\"1\">1</Option>\n                                </Select>\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"接口路径\">\n                            {getFieldDecorator('apiClassName', {\n                                initialValue: detailData.apiClassName,\n                                rules: [{ required: true, message: '请填写接口路径!' }],\n                            })(\n                                <Input disabled style={{ width: 823 }} />\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"方法名\">\n                            {getFieldDecorator('apiMethodName', {\n                                initialValue: detailData.apiMethodName,\n                                rules: [{ required: true, message: '请填写方法名!' }],\n                            })(\n                                <Input disabled style={{ width: 375 }} />\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"接口名\">\n                            {getFieldDecorator('name', {\n                                initialValue: detailData.name,\n                                rules: [{ required: true, message: '请填写接口名!' }],\n                            })(\n                                <Input style={{ width: 378 }} onChange={this.inputChange.bind(this,'name')} />\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"创建人\">\n                            {getFieldDecorator('creatorName', {\n                                initialValue: detailData.creatorName,\n                                rules: [{ required: true, message: '请填写创建人!' }],\n                            })(\n                                <Input disabled style={{ width: 145 }} />\n                            )}\n                        </FormItem>\n                        <FormItem {...this.formItemLayout} label=\"标签\">\n                            <div>\n                                {tags.map((tag, index) => {\n                                    const isLongTag = tag.length > 20;\n                                    const tagElem = (\n                                        <Tag key={tag.id} closable onClose={() => this.handleClose(tag.id)}>\n                                            {isLongTag ? `${tag.value.slice(0, 20)}...` : tag.value}\n                                        </Tag>\n                                    );\n                                    return isLongTag ? (\n                                        <Tooltip title={tag.value} key={tag.id}>\n                                            {tagElem}\n                                        </Tooltip>\n                                    ) : (\n                                        tagElem\n                                    );\n                                })}\n                                {inputVisible && (\n                                    <Input\n                                        ref={this.saveInputRef}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue}\n                                        onChange={this.handleInputChange}\n                                        onBlur={this.handleInputConfirm}\n                                        onPressEnter={this.handleInputConfirm}\n                                    />\n                                )}\n                                {!inputVisible && (\n                                    <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> New Tag\n                                    </Tag>\n                                )}\n\n                            </div>\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <FormItem {...this.formItemLayout} label=\"描述\">\n                            {getFieldDecorator('desc', {\n                                initialValue: detailData.desc,\n                                rules: [{ required: false, message: '请填写描述!' }],\n                            })(\n                                <TextArea rows={3} style={{ width: 852 }} value={detailData.desc} onChange={this.inputChange.bind(this,'desc')}/>\n                            )}\n                        </FormItem>\n                    </Row>\n                    <Row>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                修改\n                            </Button>\n                        </Form.Item>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(DetailIndex)\n"],"sourceRoot":""}