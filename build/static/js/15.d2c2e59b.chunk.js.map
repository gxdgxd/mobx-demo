{"version":3,"sources":["container/ExeRecord/config.js","container/ExeRecord/ResultMessageModal.js","container/ExeRecord/DetailModal.js","container/ExeRecord/index.js"],"names":["ResultMessageModal","inject","observer","props","state","this","ExeRecordStore","hideResultMessageModal","resultMessageModalVisible","message","className","destroyOnClose","title","okText","width","visible","onOk","hideModal","bind","onCancel","cancelText","Component","DetailModal","showResultMessageModal","modalVisible","detailData","caseData","toJS","caseExeRecords","statusStr","status","color","context","style","type","backgroundColor","border","gutter","span","exeTimeStr","env","operatorName","testCaseCount","succeedCount","failedCount","bordered","columns","dataIndex","key","render","text","record","testCase","name","length","substr","str","id","validScript","paramScript","contextParamScript","desc","apiId","testApi","apiClassName","apiMethodName","content","priority","creatorName","row","onClick","apiHref","updateHref","href","target","dataSource","Option","FormItem","Item","RangePicker","ExeRecordIndex","onChangePage","page","initData","formItemLayout","labelCol","wrapperCol","handleSearch","handleCreatorSearch","value","CommonStore","getAllCreators","setState","data","handleCreatorChange","changeTableRequestData","json_str","setBreadcrumb","n","e","v","getDetailData","dates","dateStrings","pageNo","pageSize","totalCount","allCreators","mydataSource","label","ranges","Today","moment","startOf","endOf","onChange","onDateChange","placeholder","allowClear","inputChange","showSearch","defaultActiveFirstOption","showArrow","filterOption","onSearch","notFoundContent","map","d","userId","realName","optionChange","htmlType","showModal","pagination","current","total"],"mappings":"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","file":"static/js/15.d2c2e59b.chunk.js","sourcesContent":["import React  from 'react';\nimport {Input,Icon,Popover,Tag,Tooltip} from 'antd';\nimport common from \"../../style/common.css\";\n\nconst TextArea  = Input;\n\n\nexport const columns = (context) => [\n    {\n        title: '场景ID',\n        dataIndex: 'testSceneId',\n        key: 'testSceneId',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'testSceneName',\n        key: 'testSceneName'\n    },\n    {\n        title: '执行时间',\n        dataIndex: 'exeTimeStr',\n        key: 'exeTimeStr',\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n    },\n    {\n        title: '总用例数',\n        dataIndex: 'testCaseCount',\n        key: 'testCaseCount',\n    },\n    {\n        title: '成功数',\n        dataIndex: 'succeedCount',\n        key: 'succeedCount',\n    },\n    {\n        title: '失败数',\n        dataIndex: 'failedCount',\n        key: 'failedCount',\n        render: (row) => {\n            return (\n                <font color={row > 0 ? \"red\" : \"#696969\"}>{row}</font>\n            )\n        }\n    },\n    {\n        title: '操作人',\n        dataIndex: 'operatorName',\n        key: 'operatorName',\n    },\n    {\n        title: '执行状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (row) => {\n            let name = \"\"\n            if(row == \"0\"){\n                name = \"待执行\"\n                return (\n                    <span><Tag color=\"#f50\">{name}</Tag></span>\n                )\n            }else if(row == \"1\"){\n                name = \"执行中\"\n                return (\n                    <span><Tag color=\"#2db7f5\">{name}</Tag></span>\n                )\n            }else if(row == \"2\"){\n                name = \"已完成\"\n                return (\n                    <span><Tag color=\"#87d068\">{name}</Tag></span>\n                )\n            }\n        }\n    },\n    {\n        title: '操作',\n        width: '10%',\n        key: 'operation',\n        render:(row,record) => {\n            return (\n                <div>\n                    <span>\n                        <a onClick={context.showModal.bind(context,record.id)}>详情</a> &nbsp;\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const detailColumns = (context) => [\n\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:'20%',\n        render:function(text, record){\n            let testCase = record.testCase\n            var name = testCase.name.length > 16 ? testCase.name.substr(0,16) + '...' : testCase.name;\n            let str = <div>\n                <span>用例ID：{testCase.id}</span><br/>\n                <span>用例名称：{testCase.name}</span><br/>\n                <span>校验规则：{testCase.validScript}</span><br/>\n                <span>入参：{testCase.paramScript}</span><br/>\n                <span>其他参数：{testCase.contextParamScript}</span><br/>\n                <span>描述：{testCase.desc}</span><br/>\n                <span>接口ID：{testCase.apiId}</span><br/>\n                <span>接口路径：{testCase.testApi.apiClassName}</span><br/>\n                <span>方法名：{testCase.testApi.apiMethodName}</span><br/>\n                <span>接口名：{testCase.testApi.name}</span><br/>\n            </div>\n            return (\n                <span>\n                    <Popover content={str} >\n                       <font color=\"#d2a216\">{name}</font>\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:'7%',\n        render:function(text, record){\n            var priority = record.testCase.priority;\n            return (\n                <span>\n                   {priority}\n                </span>\n            )\n        }\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:'12%',\n        render:function(text, record){\n            var creatorName = record.testCase.creatorName;\n            return (\n                <span>\n                   {creatorName}\n                </span>\n            )\n        }\n    },\n    {\n        title: '接口ID',\n        dataIndex: 'apiId',\n        key: 'apiId',\n        width:'7%',\n        render:function(text, record){\n            var apiId = record.testCase.apiId\n            return (\n                <span>\n                   {apiId}\n                </span>\n            )\n        }\n    },\n    {\n        title: '接口名',\n        dataIndex: 'a',\n        key: 'a',\n        width:'20%',\n        render:function(text, record){\n            var name = record.testCase.testApi.name\n            return (\n                <span>\n                   {name}\n                </span>\n            )\n        }\n    },\n    {\n        title: '状态',\n        dataIndex: 'succeed',\n        key: 'succeed',\n        width:'10%',\n        render:function(row){\n            let name = \"\"\n            if(row == true){\n                name = \"执行成功\"\n                return (\n                    <span><Tag color=\"#87d068\">{name}</Tag></span>\n                )\n            }else if(row == false){\n                name = \"执行失败\"\n                return (\n                    <span><Tag color=\"#f50\">{name}</Tag></span>\n                )\n            }\n        }\n    },\n    {\n        title: '信息',\n        dataIndex: 'message',\n        key: 'message',\n        width:'6%',\n        render:function(text, record){\n            return (\n                <span>\n                    <a onClick={context.showResultMessageModal.bind(context,record.message)}><Icon type=\"message\" /></a> &nbsp;\n                </span>\n            )\n        }\n    },\n    {\n        title: '操作',\n        width: '15%',\n        key: 'operation',\n        render:(row,record) => {\n            let apiHref = '/update_api?apiId=' + record.testCase.apiId\n            let updateHref = '/edit_testcase?apiId=' + record.testCase.apiId + \"&caseId=\" + record.testCase.id\n            return (\n                <span>\n                    <a href={updateHref} target=\"_blank\">查看用例</a>&nbsp;\n                    <a href={apiHref} target=\"_blank\" className=\"vLine\"> 查看接口</a>&nbsp;\n                </span>\n            )\n        }\n    }\n];\n\n\n\n\n","import React, {Component} from 'react';\nimport { observable, action, computed ,toJS} from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Modal} from 'antd';\n\n@inject('ExeRecordStore')\n@observer\nclass ResultMessageModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.state= {\n        }\n    }\n\n    hideModal(){\n        this.props.ExeRecordStore.hideResultMessageModal();\n    }\n    render(){\n        const {resultMessageModalVisible,message} = this.props\n\n        return(\n            <div className=\"container-bg\">\n                <Modal\n                    destroyOnClose\n                    title=\"结果信息\"\n                    okText=\"关闭\"\n                    width=\"800px\"\n                    visible={resultMessageModalVisible}\n                    onOk={this.hideModal.bind(this)}\n                    onCancel={this.hideModal.bind(this)}\n                    cancelText=\"取消\"\n                    className=\"model\"  width=\"1100px\">\n                    <pre>\n                        {message}\n                    </pre>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ResultMessageModal;","import React, {Component} from 'react';\nimport { observable, action, computed ,toJS} from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Alert,Row, Col,Tag,Modal} from 'antd';\nimport {detailColumns} from \"./config\";\nimport ResultMessageModal from \"./ResultMessageModal\";\n\n\n@inject('ExeRecordStore')\n@observer\nclass DetailModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.state= {\n        }\n    }\n\n    hideModal(){\n        this.props.ExeRecordStore.hideModal();\n    }\n    showResultMessageModal(message){\n        this.props.ExeRecordStore.showResultMessageModal(message);\n    }\n    render(){\n        const {resultMessageModalVisible,message} = this.props.ExeRecordStore\n        const {modalVisible,detailData} = this.props\n        let caseData = toJS(detailData.caseExeRecords)\n        let statusStr = \"\"\n        if(detailData.status == 0){\n            statusStr = <Tag color=\"#f50\">待执行</Tag>\n        }else if(detailData.status == 1){\n            statusStr = <Tag color=\"#2db7f5\">执行中</Tag>\n        }else if(detailData.status == 2){\n            statusStr = <Tag color=\"#87d068\">已完成</Tag>\n        }\n        const style = {\n            'marginBottom':'8px'\n        }\n        return(\n            <div className=\"container-bg\">\n                <Modal\n                    destroyOnClose\n                    title=\"执行详情\"\n                    width=\"800px\"\n                    okText=\"关闭\"\n                    visible={modalVisible}\n                    onOk={this.hideModal.bind(this)}\n                    onCancel={this.hideModal.bind(this)}\n                    cancelText=\"取消\"\n                    className=\"model\"  width=\"1100px\">\n                    <Alert message=\"执行情况\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n\n                    <Row gutter={48} style={style}>\n                        <Col span={4}>\n                           &nbsp;执行结果：{statusStr}\n                        </Col>\n                        <Col span={6}>\n                            执行时间：{detailData.exeTimeStr}\n                        </Col>\n                        <Col span={7}>\n                            执行环境：{detailData.env}\n                        </Col>\n                        <Col span={4}>\n                            操作人：{detailData.operatorName}\n                        </Col>\n                    </Row>\n                    <Row gutter={48} style={style}>\n                        <Col span={4}>\n                            &nbsp;总用例数：{detailData.testCaseCount}\n                        </Col>\n                        <Col span={6}>\n                            成功数：{detailData.succeedCount}\n                        </Col>\n                        <Col span={5}>\n                            失败数：{detailData.failedCount}\n                        </Col>\n                    </Row>\n                    <Alert message=\"用例信息\" type=\"info\" style={{backgroundColor:'#c7e7ff',border:'0px','marginBottom':'10px'}}/>\n                    <Table\n                        bordered\n                        columns={detailColumns(this)}\n                        dataSource={caseData} />\n                    <ResultMessageModal resultMessageModalVisible={resultMessageModalVisible} message={message}/>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default DetailModal;","import React, {Component} from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Input,Select,Form,Row, Col,Button,Icon,DatePicker,Pagination} from 'antd';\nimport moment from 'moment';\nimport {columns} from \"./config\";\nimport DetailModal from \"./DetailModal\";\nconst Option = Select.Option;\n\nconst FormItem = Form.Item;\nconst { RangePicker } = DatePicker;\n\n@inject('ExeRecordStore','CommonStore')\n@observer\nclass ExeRecordIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '执行记录'},\n        ]);\n        this.props.ExeRecordStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            json_str:{}\n        }\n    }\n    inputChange(n,e) {\n        this.props.ExeRecordStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.ExeRecordStore.changeTableRequestData(n,v || '');\n    }\n    showModal(id){\n        this.props.ExeRecordStore.getDetailData(id)\n    }\n    onChangePage = page => {\n        this.props.ExeRecordStore.initData(page);\n    };\n    onDateChange(dates, dateStrings) {\n        this.props.ExeRecordStore.changeTableRequestData('exeTimeBefore',dateStrings[0]);\n        this.props.ExeRecordStore.changeTableRequestData('finishTimeAfter',dateStrings[1]);\n    }\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n    handleSearch = () => {\n        this.props.ExeRecordStore.initData(1);\n    }\n    handleCreatorSearch = value => {\n        if (value) {\n            this.props.CommonStore.getAllCreators(value)\n        } else {\n            this.setState({ data: [] });\n        }\n    };\n\n    handleCreatorChange = value => {\n        this.setState({ value });\n        this.props.ExeRecordStore.changeTableRequestData('operatorId',value);\n    };\n    render(){\n        const {dataSource,modalVisible,pageNo,pageSize,totalCount,detailData} = this.props.ExeRecordStore\n        const {allCreators} = this.props.CommonStore\n        const mydataSource = dataSource.toJS()\n        return(\n            <div className=\"container-bg\">\n                <Form  className=\"ant-advanced-search-form p-xs pb-0\">\n                    <Row gutter={48}>\n                        <Col span={8}>\n                            <FormItem {...this.formItemLayout} label=\"时间\">\n                                <RangePicker\n                                    ranges={{\n                                        Today: [moment(), moment()],\n                                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                    }}\n                                    onChange={this.onDateChange}\n                                />\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"场景ID\">\n                                <Input placeholder=\"请输入场景ID\"  allowClear={true}  onChange={this.inputChange.bind(this,'testSceneId')}/>\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"执行环境\">\n                                <Input placeholder=\"请输入执行环境\"  allowClear={true} onChange={this.inputChange.bind(this,'env')}/>\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row gutter={48}>\n                        <Col span={8}>\n                            <FormItem {...this.formItemLayout} label=\"操作人\">\n                                <Select\n                                    showSearch\n                                    value={this.state.value}\n                                    placeholder=\"请输入真名搜索(非花名)\"\n                                    style={this.props.style}\n                                    defaultActiveFirstOption={false}\n                                    showArrow={false}\n                                    filterOption={false}  allowClear={true}\n                                    onSearch={this.handleCreatorSearch}\n                                    onChange={this.handleCreatorChange}\n                                    notFoundContent={null}\n                                >\n                                    {allCreators.map(d => <Option key={d.userId}>{d.realName}</Option>)}\n                                </Select>\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"执行状态\">\n                                <Select placeholder=\"请选择执行状态\"  allowClear={true}  onChange={this.optionChange.bind(this,'status')}>\n                                    <Option value=\"0\">待执行</Option>\n                                    <Option value=\"1\">执行中</Option>\n                                    <Option value=\"2\">已完成</Option>\n                                </Select>\n                            </FormItem>\n                        </Col>\n                        <Col span={3}>\n                            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSearch}>\n                                <Icon type=\"search\" /> 搜索\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n                <Row style={{'marginTop':'8px'}}>\n                    <Table\n                        bordered\n                        columns={columns(this)} pagination={false}\n                        dataSource={mydataSource} />\n                    <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n                    <DetailModal modalVisible={modalVisible} detailData={detailData}/>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default ExeRecordIndex;"],"sourceRoot":""}