{"version":3,"sources":["container/SceneManager/config.js","container/TestCaseManager/SearchForm.js","container/SceneManager/InsertCaseModal.js","container/SceneManager/DragableBodyRow.js","container/SceneManager/Insert/index.js"],"names":["columns","context","title","dataIndex","key","width","render","row","name","record","href","id","target","onConfirm","exeCase","className","insertCaseColumns","fixed","text","str","testApi","apiClassName","apiMethodName","argsTypeNames","content","updateHref","apiId","apiHref","deleteSceneCase","caseColumns","FormItem","Item","Option","SearchForm","inject","observer","props","handleSearch","TestCaseManagerStore","initData","handleCreatorSearch","value","CommonStore","getAllCreators","setState","data","handleCreatorChange","changeTableRequestData","formItemLayout","labelCol","span","wrapperCol","state","undefined","this","getAllTags","n","e","v","allTags","allCreators","gutter","label","placeholder","allowClear","onChange","inputChange","bind","optionChange","map","item","showSearch","style","defaultActiveFirstOption","showArrow","filterOption","onSearch","notFoundContent","d","userId","realName","type","onClick","Component","create","InsertCaseModal","onChangePage","page","selectedRowKeys","selectedRows","length","message","warn","console","log","SceneManagerStore","insertCase","hideInsertCaseModal","dataSource","pageNo","pageSize","totalCount","insertCaseModalVisible","mydataSource","toJS","rowSelection","destroyOnClose","visible","onOk","okModal","onCancel","hideModal","okText","cancelText","bordered","pagination","size","rowKey","current","total","dragingIndex","BodyRow","isOver","connectDragSource","connectDropTarget","restProps","moveRow","cursor","index","React","rowSource","beginDrag","DragableBodyRow","DropTarget","drop","monitor","dragIndex","getItem","hoverIndex","connect","dropTarget","DragSource","dragSource","InsertIndex","components","body","caseDataSource","dragRow","newData","update","$splice","orderCase","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","insertScene","newCaseDataSource","setBreadcrumb","toString","showInsertCaseModal","getFieldDecorator","marginLeft","onSubmit","rules","required","defaultValue","htmlType","color","backend","HTML5Backend","scroll","x","y","onRow"],"mappings":"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","file":"static/js/7.3916f1e3.chunk.js","sourcesContent":["import React  from 'react';\nimport { Popover,Popconfirm} from 'antd';\nimport common from \"../../style/common.css\";\n\nexport const columns = (context) => [\n    {\n        title: '场景ID',\n        dataIndex: 'id',\n        key: 'id',\n        width: '7%',\n    },\n    {\n        title: '场景名称',\n        dataIndex: 'name',\n        key: 'name',\n        width: '18%',\n    },\n    {\n        title: '执行方式',\n        dataIndex: 'scheduleType',\n        key: 'scheduleType',\n        width: '10%',\n        render: (row) => {\n            var name = ''\n            if(row == 0){\n                name = \"顺序执行\"\n            }else if(row == 1){\n                name = \"并行执行\"\n            }else if(row == 2){\n                name = \"自定义\"\n            }\n            return (\n                <span>{name}</span>\n            )\n        }\n    },\n    {\n        title: '环境',\n        dataIndex: 'env',\n        key: 'env',\n        width: '10%',\n    },\n\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName', width: '15%',\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width: '15%',\n    },\n    {\n        title: '操作',\n        width: '15%',\n        key: 'operation',\n        render:(row,record) => {\n            let href = \"/update_scene?sceneId=\" + record.id\n\n            return (\n                <div>\n                    <span>\n                        <a href={href} target=\"_blank\">修改场景</a>&nbsp;\n                        <Popconfirm title=\"确定执行此场景吗？\" onConfirm={() => context.exeCase(record)} >\n                            <a href=\"#\"  className=\"vLine\"> 执行场景</a>\n                        </Popconfirm>\n                    </span>\n                </div>\n            )\n        }\n    }\n];\n\nexport const insertCaseColumns = (context) => [\n\n    {\n        title: '用例ID',\n        dataIndex: 'id',\n        key: 'id',\n        width:80,\n        fixed: 'left',\n    },\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:350,\n    },\n\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:100,\n    },\n    {\n        title: '接口路径',\n        dataIndex: 'apiClassName',\n        key: 'apiClassName',\n        width:350,\n        render:function(text, record){\n            let str = <div>\n                <span>接口名：{record.testApi.name}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>参数类型：{record.testApi.argsTypeNames}</span><br/>\n            </div>\n            return (\n                <span>\n                    <Popover content={str} >\n                       {record.testApi.apiClassName}\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '方法名',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:170,\n        render:function(text, record){\n            return (\n                <span>\n                    {record.testApi.apiMethodName}\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:80\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:150,\n    },\n    {\n        title: '操作',\n        width: 230,\n        key: 'operation',\n        fixed: 'right',\n        render:(row,record) => {\n            let updateHref = '/edit_testcase?apiId=' + record.apiId + \"&caseId=\" + record.id\n            let apiHref = '/api_manager?apiId=' + record.apiId\n            return (\n                <span>\n                    <Popconfirm title=\"确定从此场景中移除此用例吗？\" onConfirm={() => context.deleteSceneCase(record.key)} >\n                      <a href=\"#\">移除用例</a>&nbsp;\n                    </Popconfirm>\n                    <a href={updateHref} target=\"_blank\"  className=\"vLine\"> 修改用例</a>&nbsp;\n                    <a href={apiHref} target=\"_blank\"  className=\"vLine\"> 查看接口</a>\n                </span>\n            )\n        }\n    }\n];\n\n\nexport const caseColumns = (context) => [\n    {\n        title: '用例ID',\n        dataIndex: 'id',\n        key: 'id',\n        width:80,\n    },\n    {\n        title: '用例名称',\n        dataIndex: 'name',\n        key: 'name',\n        width:350,\n    },\n\n    {\n        title: '应用',\n        dataIndex: 'appName',\n        key: 'appName',\n        width:100,\n    },\n    {\n        title: '接口路径',\n        dataIndex: 'apiClassName',\n        key: 'apiClassName',\n        width:300,\n        render:function(text, record){\n            let str = <div>\n                <span>接口名：{record.testApi.name}</span><br/>\n                <span>接口路径：{record.testApi.apiClassName}</span><br/>\n                <span>方法名：{record.testApi.apiMethodName}</span><br/>\n                <span>参数类型：{record.testApi.argsTypeNames}</span><br/>\n            </div>\n            return (\n                <span>\n                    <Popover content={str} >\n                       {record.testApi.apiClassName}\n                    </Popover>\n                </span>\n            )\n        }\n    },\n    {\n        title: '方法名',\n        dataIndex: 'apiMethodName',\n        key: 'apiMethodName',\n        width:170,\n        render:function(text, record){\n            return (\n                <span>\n                    {record.testApi.apiMethodName}\n                </span>\n            )\n        }\n    },\n    {\n        title: '优先级',\n        dataIndex: 'priority',\n        key: 'priority',\n        width:80\n    },\n    {\n        title: '创建人',\n        dataIndex: 'creatorName',\n        key: 'creatorName',\n        width:150,\n    },\n    {\n        title: '更新时间',\n        dataIndex: 'editTimeStr',\n        key: 'editTimeStr',\n        width:200,\n    },\n];\n\n\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport {  Button, Select,Icon, Row, Col, Form, Input } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n@inject('TestCaseManagerStore','CommonStore')\n@observer\nclass SearchForm extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            data: [],\n            value: undefined,\n        }\n    }\n    componentDidMount() {\n        this.props.CommonStore.getAllTags();\n    }\n\n    inputChange(n,e) {\n        this.props.TestCaseManagerStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v) {\n        this.props.TestCaseManagerStore.changeTableRequestData(n,v || '');\n    }\n    handleSearch = () => {\n        this.props.TestCaseManagerStore.initData(1);\n    }\n    handleCreatorSearch = value => {\n        if (value) {\n            this.props.CommonStore.getAllCreators(value)\n        } else {\n            this.setState({ data: [] });\n        }\n    };\n\n    handleCreatorChange = value => {\n        this.setState({ value });\n        this.props.TestCaseManagerStore.changeTableRequestData('creatorId',value);\n    };\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n\n    render(){\n        const {allTags,allCreators} = this.props.CommonStore\n\n        return (\n            <Form className=\"ant-advanced-search-form p-xs pb-0\" >\n                <Row gutter={48}>\n\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"用例名\">\n                            <Input placeholder=\"请输入用例名\"  allowClear={true} onChange={this.inputChange.bind(this,'name')}/>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"标签\">\n                            <Select name=\"tagId\" allowClear={true} placeholder=\"请选择标签搜索\"\n                                    onChange={this.optionChange.bind(this,'tagId')}>\n                                {allTags.map(item => <Option key={item.id} value={item.id}>{item.value}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"创建人\">\n                            <Select\n                                showSearch  allowClear={true}\n                                value={this.state.value}\n                                placeholder=\"请输入真名搜索(非花名)\"\n                                style={this.props.style}\n                                defaultActiveFirstOption={false}\n                                showArrow={false}\n                                filterOption={false}\n                                onSearch={this.handleCreatorSearch}\n                                onChange={this.handleCreatorChange}\n                                notFoundContent={null}\n                            >\n                                {allCreators.map(d => <Option key={d.userId}>{d.realName}</Option>)}\n                            </Select>\n                        </FormItem>\n                    </Col>\n                </Row>\n                <Row gutter={48}>\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"接口ID\">\n                            <Input placeholder=\"请输入接口ID\" allowClear={true} onChange={this.inputChange.bind(this,'apiId')}/>\n                        </FormItem>\n                    </Col>\n\n                    <Col span={7}>\n                        <FormItem {...this.formItemLayout} label=\"优先级\">\n                            <Select  placeholder=\"请选择优先级搜索\"  allowClear={true} onChange={this.optionChange.bind(this,'priority')}>\n                                <Option value=\"0\">0</Option>\n                                <Option value=\"1\">1</Option>\n                                <Option value=\"2\">2</Option>\n                                <Option value=\"3\">3</Option>\n                            </Select>\n                        </FormItem>\n                    </Col>\n                    <Col span={3} style={{'marginTop':'3px'}}>\n                        <Button type=\"primary\"  onClick={this.handleSearch}>\n                            <Icon type=\"search\" /> 搜索\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(SearchForm)\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table,Form, Pagination, Modal } from 'antd';\nimport SearchForm from '../TestCaseManager/SearchForm';\nimport {caseColumns} from \"./config\";\nimport common from \"../../style/common.css\";\nimport {message} from \"antd/lib/index\";\nconst FormItem = Form.Item;\n\n@inject('SceneManagerStore','TestCaseManagerStore')\n@observer\nclass InsertCaseModal extends Component{\n    componentDidMount() {\n        this.props.TestCaseManagerStore.initData(1);\n    }\n    constructor(props){\n        super(props);\n        this.state={\n            selectedRowKeys:[],\n            selectedRows:[]\n        }\n    }\n\n    /**\n     * 点击保存时\n     */\n    okModal(){\n        if(this.state.selectedRowKeys.length <= 0){\n            message.warn(\"请先勾选需要追加的用例\")\n        }else{\n            console.log(this.state.selectedRowKeys)\n            console.log(this.state.selectedRows)\n            this.props.SceneManagerStore.insertCase(this.state.selectedRows);\n        }\n    }\n\n    hideModal(){\n        this.props.SceneManagerStore.hideInsertCaseModal('insert');\n    }\n    onChangePage = page => {\n        this.props.TestCaseManagerStore.initData(page);\n    };\n\n    render(){\n        const {dataSource,pageNo,pageSize,totalCount} = this.props.TestCaseManagerStore\n        const { insertCaseModalVisible} = this.props\n        const mydataSource = dataSource.toJS()\n        var rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n                this.setState({\n                    selectedRowKeys: selectedRowKeys,\n                    selectedRows: selectedRows\n                });\n            }\n        };\n        return (\n            <Modal\n                destroyOnClose\n                title=\"追加用例\"\n                width=\"1100px\"\n                visible={insertCaseModalVisible}\n                onOk={this.okModal.bind(this)}\n                onCancel={this.hideModal.bind(this)}\n                okText=\"添加\"\n                cancelText=\"取消\"\n                className=\"model\" style={{'marginTop':'28px'}}>\n                <SearchForm />\n                <Table rowSelection={rowSelection}\n                    bordered\n                    columns={caseColumns(this)} pagination={false}\n                    dataSource={mydataSource}  size=\"middle\" rowKey=\"id\"/>\n                <Pagination onChange={this.onChangePage} pageSize={pageSize} current={pageNo}  total={totalCount} style={{'marginTop':'6px','float':'right'}}/>\n            </Modal>\n        )\n    }\n}\n\nexport default Form.create()(InsertCaseModal)\n","import { DragSource, DropTarget } from 'react-dnd';\nimport React from 'react';\n\n\n/**\n * 拖拽表格顺序\n * @type {number}\n */\nlet dragingIndex = -1;\nclass BodyRow extends React.Component {\n    render() {\n        const { isOver, connectDragSource, connectDropTarget, moveRow, ...restProps } = this.props;\n        const style = { ...restProps.style, cursor: 'move' };\n\n        let { className } = restProps;\n        if (isOver) {\n            if (restProps.index > dragingIndex) {\n                className += ' drop-over-downward';\n            }\n            if (restProps.index < dragingIndex) {\n                className += ' drop-over-upward';\n            }\n        }\n\n        return connectDragSource(\n            connectDropTarget(<tr {...restProps} className={className} style={style} />),\n        );\n    }\n}\n\nconst rowSource = {\n    beginDrag(props) {\n        dragingIndex = props.index;\n        return {\n            index: props.index,\n        };\n    },\n};\n\nconst rowTarget = {\n    drop(props, monitor) {\n        const dragIndex = monitor.getItem().index;\n        const hoverIndex = props.index;\n\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n            return;\n        }\n\n        // Time to actually perform the action\n        props.moveRow(dragIndex, hoverIndex);\n\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        monitor.getItem().index = hoverIndex;\n    },\n};\n\nexport const DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n}))(\n    DragSource('row', rowSource, connect => ({\n        connectDragSource: connect.dragSource(),\n    }))(BodyRow),\n);","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Table, Button, Tag, Select,Icon, Row, Col, Form, Input } from 'antd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DndProvider} from 'react-dnd';\n\nimport update from 'immutability-helper';\nimport InsertCaseModal from '../InsertCaseModal'\nimport {DragableBodyRow} from '../DragableBodyRow'\nimport {insertCaseColumns} from '../config';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n@inject('SceneManagerStore')\n@observer\nclass InsertIndex extends Component {\n    componentDidMount() {\n        this.props.setBreadcrumb([\n            {name: '场景管理'},\n            {name: '添加场景'}\n        ]);\n\n    }\n\n    constructor(props){\n        super(props);\n        this.state= {\n            data:[],\n            newCaseDataSource :[]\n        }\n    }\n    components = {\n        body: {\n            row: DragableBodyRow,\n        },\n    };\n    /**\n     * 上下移动数据\n     * @param dragIndex\n     * @param hoverIndex\n     */\n    moveRow = (dragIndex, hoverIndex) => {\n        debugger\n        const data = this.props.SceneManagerStore.caseDataSource.toJS()\n        const dragRow = data[dragIndex];\n        const newData =  update(data,  {$splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]]});\n        this.props.SceneManagerStore.orderCase(newData)\n    };\n    inputChange(n,e) {\n        this.props.SceneManagerStore.changeTableRequestData(n,e.target.value);\n    }\n    optionChange(n,v,Option) {\n        this.props.SceneManagerStore.changeTableRequestData(n,v.toString() || '');\n    }\n    handleSubmit = (e) => {\n        debugger\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.SceneManagerStore.insertScene();\n            }\n        });\n    }\n\n    showInsertCaseModal(){\n        this.props.SceneManagerStore.showInsertCaseModal()\n    }\n    deleteSceneCase(key){\n        this.props.SceneManagerStore.deleteSceneCase(key)\n    }\n\n\n    formItemLayout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 19 },\n    }\n\n    render(){\n        const {insertCaseModalVisible,caseDataSource} = this.props.SceneManagerStore\n        const { getFieldDecorator } = this.props.form;\n\n        return(\n            <div style={{width:'96%',marginLeft:'25px'}}>\n                <Form  className=\"ant-advanced-search-form p-xs pb-0\"  onSubmit={this.handleSubmit}>\n                    <Row gutter={48}>\n                        <Col span={9}>\n                            <FormItem {...this.formItemLayout} label=\"场景名称\">\n                                {getFieldDecorator('name', {\n                                    rules: [{ required: true, message: '请输入场景名称!' }],\n                                })(\n                                    <Input placeholder=\"请输入场景名\"  allowClear={true} style={{ width: 280 }} onChange={this.inputChange.bind(this,'name')}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={7}>\n                            <FormItem {...this.formItemLayout} label=\"环境\">\n                                {getFieldDecorator('env', {\n                                    rules: [{ required: true, message: '请输入执行环境!' }],\n                                })(\n                                    <Input placeholder=\"请输入执行环境\"  allowClear={true} style={{ width: 200 }}  onChange={this.inputChange.bind(this,'env')}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={8}>\n                            <FormItem {...this.formItemLayout} label=\"执行方式\">\n                                <Select defaultValue=\"顺序执行\" style={{ width: 130 }} onChange={this.optionChange.bind(this,'scheduleType')}>\n                                    <Option value=\"0\">顺序执行</Option>\n                                    <Option value=\"1\">并行执行</Option>\n                                </Select>\n\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={9}>\n                            <FormItem {...this.formItemLayout} label=\"执行计划\">\n                                {getFieldDecorator('cron', {\n                                    rules: [{ required: false, message: '请输入执行计划!' }],\n                                })(\n                                    <Input placeholder=\"请输入执行计划\"  style={{ width: 273 }} onChange={this.inputChange.bind(this,'cron')}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={8}>\n                            <Form.Item>\n                                <Button type=\"primary\" onClick={this.showInsertCaseModal.bind(this)} >追加用例</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <InsertCaseModal insertCaseModalVisible={insertCaseModalVisible}></InsertCaseModal>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    保存此场景数据\n                                </Button> &nbsp; &nbsp; &nbsp;\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={48}>\n                        <Tag color=\"purple\" style={{'marginBottom':'8px'}}>  <Icon type=\"smile\" /> 上下拖拽可以移动表格中用例顺序哦～  </Tag>\n\n                        <DndProvider backend={HTML5Backend}>\n                            <Table\n                                bordered pagination={false}\n                                columns={insertCaseColumns(this)}  scroll={{ x: 1580, y: 600 }}\n                                dataSource={caseDataSource.toJS()} components={this.components}\n                                onRow={(record, index) => ({\n                                    index,\n                                    moveRow: this.moveRow,\n                                })} />\n                        </DndProvider>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(InsertIndex)\n"],"sourceRoot":""}